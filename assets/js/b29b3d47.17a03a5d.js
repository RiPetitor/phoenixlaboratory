"use strict";(self.webpackChunkphoenix_lab=self.webpackChunkphoenix_lab||[]).push([[7188],{1470:(n,e,l)=>{l.d(e,{A:()=>y});var i=l(6540),t=l(4164),r=l(3104),s=l(6347),a=l(205),c=l(7485),d=l(1682),u=l(679);function o(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(n){const{values:e,children:l}=n;return(0,i.useMemo)((()=>{const n=e??function(n){return o(n).map((({props:{value:n,label:e,attributes:l,default:i}})=>({value:n,label:e,attributes:l,default:i})))}(l);return function(n){const e=(0,d.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,l])}function p({value:n,tabValues:e}){return e.some((e=>e.value===n))}function x({queryString:n=!1,groupId:e}){const l=(0,s.W6)(),t=function({queryString:n=!1,groupId:e}){if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:n,groupId:e});return[(0,c.aZ)(t),(0,i.useCallback)((n=>{if(!t)return;const e=new URLSearchParams(l.location.search);e.set(t,n),l.replace({...l.location,search:e.toString()})}),[t,l])]}function m(n){const{defaultValue:e,queryString:l=!1,groupId:t}=n,r=h(n),[s,c]=(0,i.useState)((()=>function({defaultValue:n,tabValues:e}){if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${e.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const l=e.find((n=>n.default))??e[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:e,tabValues:r}))),[d,o]=x({queryString:l,groupId:t}),[m,f]=function({groupId:n}){const e=function(n){return n?`docusaurus.tab.${n}`:null}(n),[l,t]=(0,u.Dv)(e);return[l,(0,i.useCallback)((n=>{e&&t.set(n)}),[e,t])]}({groupId:t}),_=(()=>{const n=d??m;return p({value:n,tabValues:r})?n:null})();(0,a.A)((()=>{_&&c(_)}),[_]);return{selectedValue:s,selectValue:(0,i.useCallback)((n=>{if(!p({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);c(n),o(n),f(n)}),[o,f,r]),tabValues:r}}var f=l(2303);const _={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=l(4848);function g({className:n,block:e,selectedValue:l,selectValue:i,tabValues:s}){const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=n=>{const e=n.currentTarget,t=a.indexOf(e),r=s[t].value;r!==l&&(c(e),i(r))},u=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const l=a.indexOf(n.currentTarget)+1;e=a[l]??a[0];break}case"ArrowLeft":{const l=a.indexOf(n.currentTarget)-1;e=a[l]??a[a.length-1];break}}e?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":e},n),children:s.map((({value:n,label:e,attributes:i})=>(0,j.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:n=>{a.push(n)},onKeyDown:u,onClick:d,...i,className:(0,t.A)("tabs__item",_.tabItem,i?.className,{"tabs__item--active":l===n}),children:e??n},n)))})}function b({lazy:n,children:e,selectedValue:l}){const r=(Array.isArray(e)?e:[e]).filter(Boolean);if(n){const n=r.find((n=>n.props.value===l));return n?(0,i.cloneElement)(n,{className:(0,t.A)("margin-top--md",n.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((n,e)=>(0,i.cloneElement)(n,{key:e,hidden:n.props.value!==l})))})}function v(n){const e=m(n);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",_.tabList),children:[(0,j.jsx)(g,{...e,...n}),(0,j.jsx)(b,{...e,...n})]})}function y(n){const e=(0,f.A)();return(0,j.jsx)(v,{...n,children:o(n.children)},String(e))}},1663:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/data-types","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445","description":"\u0418\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 Rust - \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439, \u0431\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b","source":"@site/docs/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/02-data-types.mdx","sourceDirName":"learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430","slug":"/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/data-types","permalink":"/docs/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/data-types","draft":false,"unlisted":false,"editUrl":"https://github.com/RiPetitor/phoenixlaboratory/edit/main/docs/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/02-data-types.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445","description":"\u0418\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 Rust - \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439, \u0431\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b","sidebar_position":2},"sidebar":"learnSidebar","previous":{"title":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u043c\u0443\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c","permalink":"/docs/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/variables"},"next":{"title":"\u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0438 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435","permalink":"/docs/learn/Rust/\u041e\u0441\u043d\u043e\u0432\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430/constants"}}');var t=l(4848),r=l(8453),s=l(1470),a=l(9365);l(1028);const c={title:"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445",description:"\u0418\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 Rust - \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u0447\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439, \u0431\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b",sidebar_position:2},d="\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445",u={},o=[{value:"\u0421\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u0432 Rust",id:"\u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f-\u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f-\u0432-rust",level:2},{value:"\u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432",id:"\u044f\u0432\u043d\u043e\u0435-\u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432",level:3},{value:"\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0432\u044b\u0432\u043e\u0434 \u0442\u0438\u043f\u043e\u0432",id:"\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439-\u0432\u044b\u0432\u043e\u0434-\u0442\u0438\u043f\u043e\u0432",level:3},{value:"\u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430",id:"\u0446\u0435\u043b\u044b\u0435-\u0447\u0438\u0441\u043b\u0430",level:2},{value:"\u0422\u0438\u043f\u044b \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b",id:"\u0442\u0438\u043f\u044b-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",level:3},{value:"\u041b\u0438\u0442\u0435\u0440\u0430\u043b\u044b \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b",id:"\u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",level:3},{value:"\u041f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b",id:"\u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",level:3},{value:"\u0427\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439",id:"\u0447\u0438\u0441\u043b\u0430-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",level:2},{value:"\u0422\u0438\u043f\u044b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439",id:"\u0442\u0438\u043f\u044b-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",level:3},{value:"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439",id:"\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438-\u0441-\u0447\u0438\u0441\u043b\u0430\u043c\u0438-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",level:3},{value:"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439",id:"\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b-\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",level:3},{value:"\u0411\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",id:"\u0431\u0443\u043b\u0435\u0432\u044b-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",level:2},{value:"\u041e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 bool",id:"\u043e\u0441\u043d\u043e\u0432\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-bool",level:3},{value:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",id:"\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f-\u0438-\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",level:3},{value:"\u0421\u0438\u043c\u0432\u043e\u043b\u044b (char)",id:"\u0441\u0438\u043c\u0432\u043e\u043b\u044b-char",level:2},{value:"\u041e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",id:"\u043e\u0441\u043d\u043e\u0432\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",level:3},{value:"\u041c\u0435\u0442\u043e\u0434\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",id:"\u043c\u0435\u0442\u043e\u0434\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",level:3},{value:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0442\u0438\u043f\u0430\u043c\u0438",id:"\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f-\u043c\u0435\u0436\u0434\u0443-\u0442\u0438\u043f\u0430\u043c\u0438",level:2},{value:"\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",id:"\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",level:3},{value:"\u041d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",id:"\u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",level:3},{value:"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",id:"\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",level:3},{value:"\u0421\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0442\u0438\u043f\u043e\u0432",id:"\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435-\u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b-\u0438-\u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b-\u0442\u0438\u043f\u043e\u0432",level:2},{value:"\u0421\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0442\u0438\u043f\u043e\u0432",id:"\u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b-\u0442\u0438\u043f\u043e\u0432",level:3},{value:"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 \u0432 \u0447\u0438\u0441\u043b\u0430\u0445",id:"\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438-\u0432-\u0447\u0438\u0441\u043b\u0430\u0445",level:3},{value:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b",id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u043f\u0440\u0438\u043c\u0435\u0440\u044b",level:2},{value:"\u041a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438",id:"\u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440-\u0441-\u0440\u0430\u0437\u043d\u044b\u043c\u0438-\u0442\u0438\u043f\u0430\u043c\u0438",level:3},{value:"\u0410\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0442\u0435\u043a\u0441\u0442\u0430",id:"\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440-\u0442\u0435\u043a\u0441\u0442\u0430",level:3},{value:"\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0442\u0438\u043f\u043e\u0432 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438",id:"\u0440\u0430\u0437\u043c\u0435\u0440\u044b-\u0442\u0438\u043f\u043e\u0432-\u0432-\u043f\u0430\u043c\u044f\u0442\u0438",level:2},{value:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0438\u043f\u0430\u043c\u0438",id:"\u043b\u0443\u0447\u0448\u0438\u0435-\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0442\u0438\u043f\u0430\u043c\u0438",level:2},{value:"1. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0442\u0438\u043f\u043e\u0432",id:"1-\u0432\u044b\u0431\u043e\u0440-\u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445-\u0442\u0438\u043f\u043e\u0432",level:3},{value:"2. \u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e",id:"2-\u044f\u0432\u043d\u043e\u0435-\u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432-\u043a\u043e\u0433\u0434\u0430-\u043d\u0443\u0436\u043d\u043e",level:3},{value:"3. \u0418\u0437\u0431\u0435\u0433\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439",id:"3-\u0438\u0437\u0431\u0435\u0433\u0430\u043d\u0438\u0435-\u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439",level:3},{value:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",level:2},{value:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f",id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u0437\u0430\u0434\u0430\u043d\u0438\u044f",level:3},{value:"\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",id:"\u0432\u043e\u043f\u0440\u043e\u0441\u044b-\u0434\u043b\u044f-\u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",level:3},{value:"\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438",id:"\u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435-\u0441\u0441\u044b\u043b\u043a\u0438",level:3}];function h(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"\u0431\u0430\u0437\u043e\u0432\u044b\u0435-\u0442\u0438\u043f\u044b-\u0434\u0430\u043d\u043d\u044b\u0445",children:"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445"})}),"\n",(0,t.jsxs)(e.p,{children:["\u0412 \u044d\u0442\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0438\u0437\u0443\u0447\u0438\u043c ",(0,t.jsx)(e.strong,{children:"\u0441\u043a\u0430\u043b\u044f\u0440\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445"})," \u0432 Rust \u2014 \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0435 \u0442\u0438\u043f\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. Rust \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f ",(0,t.jsx)(e.strong,{children:"\u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0442\u0438\u043f\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c"})," \u044f\u0437\u044b\u043a\u043e\u043c, \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u0441\u0435 \u0442\u0438\u043f\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438."]}),"\n",(0,t.jsx)(e.h2,{id:"\u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f-\u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f-\u0432-rust",children:"\u0421\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u0432 Rust"}),"\n",(0,t.jsx)(e.h3,{id:"\u044f\u0432\u043d\u043e\u0435-\u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432",children:"\u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432"',children:"fn main() {\n    let x: i32 = 42;        // 32-\u0431\u0438\u0442\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n    let y: f64 = 3.14159;   // 64-\u0431\u0438\u0442\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439\n    let z: bool = true;     // \u0411\u0443\u043b\u0435\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n    let c: char = '\ud83e\udd80';     // \u0421\u0438\u043c\u0432\u043e\u043b Unicode\n\n    println!(\"x: {}, y: {}, z: {}, c: {}\", x, y, z, c);\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439-\u0432\u044b\u0432\u043e\u0434-\u0442\u0438\u043f\u043e\u0432",children:"\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0432\u044b\u0432\u043e\u0434 \u0442\u0438\u043f\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0412\u044b\u0432\u043e\u0434 \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440\u043e\u043c"',children:'fn main() {\n    let x = 42;           // \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 i32\n    let y = 3.14159;      // \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 f64\n    let z = true;         // \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 bool\n    let c = \'\ud83e\udd80\';         // \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 char\n\n    // \u041c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0442\u0438\u043f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e std::any::type_name\n    println!("\u0422\u0438\u043f x: {}", std::any::type_name_of_val(&x));\n    println!("\u0422\u0438\u043f y: {}", std::any::type_name_of_val(&y));\n}\n'})}),"\n",(0,t.jsx)(e.admonition,{title:"\u0412\u044b\u0432\u043e\u0434 \u0442\u0438\u043f\u043e\u0432",type:"info",children:(0,t.jsx)(e.p,{children:"Rust \u0438\u043c\u0435\u0435\u0442 \u043c\u043e\u0449\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u044b\u0432\u043e\u0434\u0430 \u0442\u0438\u043f\u043e\u0432. \u0412 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u0438\u043f\u044b \u2014 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u0432\u044b\u0432\u0435\u0434\u0435\u0442 \u0438\u0445 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f."})}),"\n",(0,t.jsx)(e.h2,{id:"\u0446\u0435\u043b\u044b\u0435-\u0447\u0438\u0441\u043b\u0430",children:"\u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430"}),"\n",(0,t.jsx)(e.p,{children:"Rust \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0440\u0430\u0437\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430:"}),"\n",(0,t.jsx)(e.h3,{id:"\u0442\u0438\u043f\u044b-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",children:"\u0422\u0438\u043f\u044b \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsxs)(a.A,{value:"signed",label:"\u0417\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0446\u0435\u043b\u044b\u0435",children:[(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"\u0422\u0438\u043f"}),(0,t.jsx)(e.th,{children:"\u0420\u0430\u0437\u043c\u0435\u0440"}),(0,t.jsx)(e.th,{children:"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"i8"})}),(0,t.jsx)(e.td,{children:"8 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"-128 \u0434\u043e 127"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"i16"})}),(0,t.jsx)(e.td,{children:"16 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"-32,768 \u0434\u043e 32,767"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"i32"})}),(0,t.jsx)(e.td,{children:"32 \u0431\u0438\u0442\u0430"}),(0,t.jsx)(e.td,{children:"-2,147,483,648 \u0434\u043e 2,147,483,647"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"i64"})}),(0,t.jsx)(e.td,{children:"64 \u0431\u0438\u0442\u0430"}),(0,t.jsx)(e.td,{children:"-9,223,372,036,854,775,808 \u0434\u043e 9,223,372,036,854,775,807"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"i128"})}),(0,t.jsx)(e.td,{children:"128 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"-(2^127) \u0434\u043e 2^127-1"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"isize"})}),(0,t.jsx)(e.td,{children:"\u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b"}),(0,t.jsx)(e.td,{children:"32 \u0438\u043b\u0438 64 \u0431\u0438\u0442\u0430"})]})]})]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0446\u0435\u043b\u044b\u0445"',children:'fn main() {\n    let small: i8 = -128;           // \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f i8\n    let medium: i32 = -2_000_000;   // i32 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n    let large: i64 = -9_223_372_036_854_775_808;\n\n    println!("i8: {}", small);\n    println!("i32: {}", medium);\n    println!("i64: {}", large);\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0433\u0440\u0430\u043d\u0438\u0446 \u0442\u0438\u043f\u043e\u0432\n    println!("\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 i32: {}", i32::MIN);\n    println!("\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 i32: {}", i32::MAX);\n}\n'})})]}),(0,t.jsxs)(a.A,{value:"unsigned",label:"\u0411\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0446\u0435\u043b\u044b\u0435",children:[(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"\u0422\u0438\u043f"}),(0,t.jsx)(e.th,{children:"\u0420\u0430\u0437\u043c\u0435\u0440"}),(0,t.jsx)(e.th,{children:"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"u8"})}),(0,t.jsx)(e.td,{children:"8 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"0 \u0434\u043e 255"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"u16"})}),(0,t.jsx)(e.td,{children:"16 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"0 \u0434\u043e 65,535"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"u32"})}),(0,t.jsx)(e.td,{children:"32 \u0431\u0438\u0442\u0430"}),(0,t.jsx)(e.td,{children:"0 \u0434\u043e 4,294,967,295"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"u64"})}),(0,t.jsx)(e.td,{children:"64 \u0431\u0438\u0442\u0430"}),(0,t.jsx)(e.td,{children:"0 \u0434\u043e 18,446,744,073,709,551,615"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"u128"})}),(0,t.jsx)(e.td,{children:"128 \u0431\u0438\u0442"}),(0,t.jsx)(e.td,{children:"0 \u0434\u043e 2^128-1"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"usize"})}),(0,t.jsx)(e.td,{children:"\u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b"}),(0,t.jsx)(e.td,{children:"32 \u0438\u043b\u0438 64 \u0431\u0438\u0442\u0430"})]})]})]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0446\u0435\u043b\u044b\u0445"',children:'fn main() {\n    let byte: u8 = 255;                    // \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f u8\n    let count: u32 = 4_294_967_295;        // \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f u32\n    let huge: u128 = 340_282_366_920_938_463_463_374_607_431_768_211_455;\n\n    println!("u8: {}", byte);\n    println!("u32: {}", count);\n    println!("u128: {}", huge);\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0433\u0440\u0430\u043d\u0438\u0446 \u0431\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0442\u0438\u043f\u043e\u0432\n    println!("\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 u8: {}", u8::MAX);\n    println!("\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 u8: {}", u8::MIN);  // \u0412\u0441\u0435\u0433\u0434\u0430 0\n}\n'})})]}),(0,t.jsxs)(a.A,{value:"arch-dependent",label:"\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435",children:[(0,t.jsxs)(e.p,{children:[(0,t.jsxs)(e.strong,{children:[(0,t.jsx)(e.code,{children:"isize"})," \u0438 ",(0,t.jsx)(e.code,{children:"usize"})]})," \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430:"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e-\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u0442\u0438\u043f\u044b"',children:'fn main() {\n    let index: usize = 42;        // \u0414\u043b\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\n    let pointer_diff: isize = -10; // \u0414\u043b\u044f \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u043a\u0438 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439\n\n    println!("usize: {}", index);\n    println!("isize: {}", pointer_diff);\n\n    // \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0435 \u0442\u0438\u043f\u043e\u0432\n    println!("\u0420\u0430\u0437\u043c\u0435\u0440 usize: {} \u0431\u0430\u0439\u0442", std::mem::size_of::<usize>());\n    println!("\u0420\u0430\u0437\u043c\u0435\u0440 isize: {} \u0431\u0430\u0439\u0442", std::mem::size_of::<isize>());\n\n    // \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n    println!("usize::MAX: {}", usize::MAX);\n    println!("isize::MIN: {}", isize::MIN);\n    println!("isize::MAX: {}", isize::MAX);\n}\n'})}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c:"})}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"usize"})," \u2014 \u0434\u043b\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"isize"})," \u2014 \u0434\u043b\u044f \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u043a\u0438 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 (\u0440\u0435\u0434\u043a\u043e \u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u043c \u043a\u043e\u0434\u0435)"]}),"\n"]})]})]}),"\n",(0,t.jsx)(e.h3,{id:"\u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",children:"\u041b\u0438\u0442\u0435\u0440\u0430\u043b\u044b \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0437\u0430\u043f\u0438\u0441\u0438 \u0447\u0438\u0441\u0435\u043b"',children:'fn main() {\n    // \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430\n    let decimal = 98_222;\n\n    // \u0428\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u044b\u0435\n    let hex = 0xff;\n\n    // \u0412\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u044b\u0435\n    let octal = 0o77;\n\n    // \u0414\u0432\u043e\u0438\u0447\u043d\u044b\u0435\n    let binary = 0b1111_0000;\n\n    // \u0411\u0430\u0439\u0442 (\u0442\u043e\u043b\u044c\u043a\u043e u8)\n    let byte = b\'A\';\n\n    println!("\u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435: {}", decimal);\n    println!("\u0428\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0447\u043d\u043e\u0435: {} ({})", hex, hex);\n    println!("\u0412\u043e\u0441\u044c\u043c\u0435\u0440\u0438\u0447\u043d\u043e\u0435: {} ({})", octal, octal);\n    println!("\u0414\u0432\u043e\u0438\u0447\u043d\u043e\u0435: {} ({})", binary, binary);\n    println!("\u0411\u0430\u0439\u0442: {} (\u0441\u0438\u043c\u0432\u043e\u043b: {})", byte, byte as char);\n\n    // \u0421\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0442\u0438\u043f\u043e\u0432\n    let typed_num = 42u64;        // \u042f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0438\u043f u64\n    let another_typed = 123i8;    // \u042f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0438\u043f i8\n\n    println!("u64: {}", typed_num);\n    println!("i8: {}", another_typed);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435-\u0446\u0435\u043b\u044b\u0445-\u0447\u0438\u0441\u0435\u043b",children:"\u041f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438"',children:'fn main() {\n    // \u0412 debug \u0440\u0435\u0436\u0438\u043c\u0435 - \u043f\u0430\u043d\u0438\u043a\u0430 \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438\n    // \u0412 release \u0440\u0435\u0436\u0438\u043c\u0435 - "\u043e\u0431\u0451\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n    let mut x: u8 = 255;\n    println!("x = {}", x);\n\n    // \u0412 release \u0440\u0435\u0436\u0438\u043c\u0435: 255 + 1 = 0 (\u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435)\n    // \u0412 debug \u0440\u0435\u0436\u0438\u043c\u0435: \u043f\u0430\u043d\u0438\u043a\u0430!\n    // x += 1; // \u0420\u0430\u0441\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n\n    // \u042f\u0432\u043d\u043e\u0435 \u043e\u0431\u0451\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435 - \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u0432 \u043b\u044e\u0431\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435\n    x = x.wrapping_add(1);\n    println!("\u041f\u043e\u0441\u043b\u0435 wrapping_add(1): {}", x); // 0\n\n    x = x.wrapping_sub(1);\n    println!("\u041f\u043e\u0441\u043b\u0435 wrapping_sub(1): {}", x); // 255\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    if let Some(result) = 255u8.checked_add(1) {\n        println!("\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {}", result);\n    } else {\n        println!("\u041f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u0438!");\n    }\n\n    // \u041d\u0430\u0441\u044b\u0449\u0430\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    let saturated = 255u8.saturating_add(10);\n    println!("\u041d\u0430\u0441\u044b\u0449\u0430\u044e\u0449\u0435\u0435 \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u0435: {}", saturated); // 255\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0447\u0438\u0441\u043b\u0430-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",children:"\u0427\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"}),"\n",(0,t.jsx)(e.p,{children:"Rust \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u0432\u0430 \u0442\u0438\u043f\u0430 \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0443 IEEE-754:"}),"\n",(0,t.jsx)(e.h3,{id:"\u0442\u0438\u043f\u044b-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",children:"\u0422\u0438\u043f\u044b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"}),"\n",(0,t.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"20px",marginBottom:"20px"},children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{children:"f32 - \u043e\u0434\u0438\u043d\u0430\u0440\u043d\u0430\u044f \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c"}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0420\u0430\u0437\u043c\u0435\u0440:"})," 32 \u0431\u0438\u0442\u0430"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c:"})," ~6-7 \u0437\u043d\u0430\u0447\u0430\u0449\u0438\u0445 \u0446\u0438\u0444\u0440"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d:"})," \xb11.175494e-38 \u0434\u043e \xb13.402823e38"]}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 f32"',children:'fn main() {\n    let x: f32 = 3.14159;\n    let y: f32 = 1e6; // \u041d\u0430\u0443\u0447\u043d\u0430\u044f \u043d\u043e\u0442\u0430\u0446\u0438\u044f\n\n    println!("f32: {}", x);\n    println!("\u041d\u0430\u0443\u0447\u043d\u0430\u044f \u043d\u043e\u0442\u0430\u0446\u0438\u044f: {}", y);\n    println!("f32::MAX: {}", f32::MAX);\n    println!("f32::MIN: {}", f32::MIN);\n}\n'})})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h4",{children:"f64 - \u0434\u0432\u043e\u0439\u043d\u0430\u044f \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c"}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0420\u0430\u0437\u043c\u0435\u0440:"})," 64 \u0431\u0438\u0442\u0430"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c:"})," ~15-17 \u0437\u043d\u0430\u0447\u0430\u0449\u0438\u0445 \u0446\u0438\u0444\u0440"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d:"})," \xb12.225074e-308 \u0434\u043e \xb11.797693e308"]}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 f64"',children:'fn main() {\n    let x = 3.14159265358979323846; // f64 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n    let y: f64 = 2.71828182845904523536;\n\n    println!("\u03c0: {}", x);\n    println!("e: {}", y);\n    println!("f64::MAX: {}", f64::MAX);\n    println!("f64::MIN: {}", f64::MIN);\n}\n'})})]})]}),"\n",(0,t.jsx)(e.h3,{id:"\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438-\u0441-\u0447\u0438\u0441\u043b\u0430\u043c\u0438-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",children:"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"basic",label:"\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0410\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438"',children:'fn main() {\n    let x = 10.5;\n    let y = 3.2;\n\n    println!("\u0421\u043b\u043e\u0436\u0435\u043d\u0438\u0435: {} + {} = {}", x, y, x + y);\n    println!("\u0412\u044b\u0447\u0438\u0442\u0430\u043d\u0438\u0435: {} - {} = {}", x, y, x - y);\n    println!("\u0423\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u0435: {} * {} = {}", x, y, x * y);\n    println!("\u0414\u0435\u043b\u0435\u043d\u0438\u0435: {} / {} = {}", x, y, x / y);\n    println!("\u041e\u0441\u0442\u0430\u0442\u043e\u043a: {} % {} = {}", x, y, x % y);\n\n    // \u0423\u043d\u0430\u0440\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    println!("\u041e\u0442\u0440\u0438\u0446\u0430\u043d\u0438\u0435: -{} = {}", x, -x);\n    println!("\u0410\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435: |{}| = {}", -x, (-x).abs());\n}\n'})})}),(0,t.jsx)(a.A,{value:"mathematical",label:"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"',children:'fn main() {\n    let x = 2.0;\n    let y = 3.14159;\n\n    // \u0421\u0442\u0435\u043f\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    println!("x^2 = {}", x.powi(2));        // \u0426\u0435\u043b\u0430\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n    println!("x^y = {}", x.powf(y));        // \u0412\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u044c\n    println!("e^x = {}", x.exp());          // \u042d\u043a\u0441\u043f\u043e\u043d\u0435\u043d\u0442\u0430\n    println!("2^x = {}", x.exp2());         // \u0421\u0442\u0435\u043f\u0435\u043d\u044c \u0434\u0432\u043e\u0439\u043a\u0438\n\n    // \u041a\u043e\u0440\u043d\u0438 \u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u044b\n    println!("\u221ax = {}", x.sqrt());          // \u041a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0439 \u043a\u043e\u0440\u0435\u043d\u044c\n    println!("\u221bx = {}", x.cbrt());          // \u041a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u043e\u0440\u0435\u043d\u044c\n    println!("ln(x) = {}", x.ln());         // \u041d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\n    println!("log\u2082(x) = {}", x.log2());     // \u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u043f\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044e 2\n    println!("log\u2081\u2080(x) = {}", x.log10());   // \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\n\n    // \u0422\u0440\u0438\u0433\u043e\u043d\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    println!("sin(\u03c0) = {}", y.sin());       // \u0421\u0438\u043d\u0443\u0441\n    println!("cos(\u03c0) = {}", y.cos());       // \u041a\u043e\u0441\u0438\u043d\u0443\u0441\n    println!("tan(\u03c0/4) = {}", (y/4.0).tan()); // \u0422\u0430\u043d\u0433\u0435\u043d\u0441\n\n    // \u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435\n    let z = 3.7;\n    println!("floor({}) = {}", z, z.floor()); // \u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u043d\u0438\u0437\n    println!("ceil({}) = {}", z, z.ceil());   // \u041e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432\u0432\u0435\u0440\u0445\n    println!("round({}) = {}", z, z.round()); // \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435\n    println!("trunc({}) = {}", z, z.trunc()); // \u041e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u0435 \u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438\n}\n'})})}),(0,t.jsx)(a.A,{value:"special",label:"\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"',children:'fn main() {\n    // \u0411\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u0438\n    let positive_infinity = f64::INFINITY;\n    let negative_infinity = f64::NEG_INFINITY;\n\n    // "\u041d\u0435 \u0447\u0438\u0441\u043b\u043e" (Not a Number)\n    let not_a_number = f64::NAN;\n\n    println!("\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c: {}", positive_infinity);\n    println!("\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c: {}", negative_infinity);\n    println!("NaN: {}", not_a_number);\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n    println!("\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c\u044e: {}", positive_infinity.is_infinite());\n    println!("\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 NaN: {}", not_a_number.is_nan());\n    println!("\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u0431\u044b\u0447\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c: {}", 42.0.is_normal());\n\n    // \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0441\u0442\u044c\u044e\n    println!("\u221e + 1 = {}", positive_infinity + 1.0);\n    println!("\u221e * 2 = {}", positive_infinity * 2.0);\n    println!("\u221e / \u221e = {}", positive_infinity / positive_infinity); // NaN\n\n    // NaN \u043d\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0438\u0447\u0435\u043c\u0443, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0441\u0430\u043c\u043e \u0441\u0435\u0431\u044f!\n    println!("NaN == NaN: {}", not_a_number == not_a_number); // false!\n    println!("NaN.eq(&NaN): {}", not_a_number.eq(&not_a_number)); // false!\n}\n'})})})]}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b-\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438-\u0441-\u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439-\u0442\u043e\u0447\u043a\u043e\u0439",children:"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u043a\u0438 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"',children:'fn main() {\n    // \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n    let x = 0.1 + 0.2;\n    println!("0.1 + 0.2 = {}", x);              // \u041d\u0435 \u0440\u0430\u0432\u043d\u043e 0.3!\n    println!("x == 0.3: {}", x == 0.3);         // false\n\n    // \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439\n    let epsilon = 1e-10;\n    let difference = (x - 0.3).abs();\n    println!("\u0420\u0430\u0437\u043d\u043e\u0441\u0442\u044c: {}", difference);\n    println!("\u041f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0432\u043d\u043e 0.3: {}", difference < epsilon);\n\n    // \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043b\u044f \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f\n    fn approximately_equal(a: f64, b: f64) -> bool {\n        (a - b).abs() < f64::EPSILON * 2.0\n    }\n\n    println!("\u041f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0432\u043d\u044b: {}", approximately_equal(x, 0.3));\n\n    // \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a\n    let mut sum = 0.0;\n    for _ in 0..10 {\n        sum += 0.1;\n    }\n    println!("10 * 0.1 = {}", sum);\n    println!("sum == 1.0: {}", sum == 1.0);     // \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c false\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0431\u0443\u043b\u0435\u0432\u044b-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f",children:"\u0411\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f"}),"\n",(0,t.jsxs)(e.p,{children:["\u0422\u0438\u043f ",(0,t.jsx)(e.code,{children:"bool"})," \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u0441\u0442\u0438\u043d\u0430/\u043b\u043e\u0436\u044c:"]}),"\n",(0,t.jsx)(e.h3,{id:"\u043e\u0441\u043d\u043e\u0432\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-bool",children:"\u041e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 bool"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0411\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438"',children:'fn main() {\n    let is_rust_awesome = true;\n    let is_difficult: bool = false;    // \u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u0430\n\n    println!("Rust \u043f\u043e\u0442\u0440\u044f\u0441\u0430\u044e\u0449\u0438\u0439: {}", is_rust_awesome);\n    println!("Rust \u0441\u043b\u043e\u0436\u043d\u044b\u0439: {}", is_difficult);\n\n    // \u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    let and_result = is_rust_awesome && is_difficult;  // \u0418 (AND)\n    let or_result = is_rust_awesome || is_difficult;   // \u0418\u041b\u0418 (OR)\n    let not_result = !is_difficult;                    // \u041d\u0415 (NOT)\n\n    println!("true && false = {}", and_result);        // false\n    println!("true || false = {}", or_result);         // true\n    println!("!false = {}", not_result);               // true\n\n    // \u041a\u043e\u0440\u043e\u0442\u043a\u043e\u0437\u0430\u043c\u043a\u043d\u0443\u0442\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f\n    let x = 5;\n    let result = x > 0 && x < 10;  // \u0412\u0442\u043e\u0440\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u043e\u0435 false\n    println!("5 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 (0, 10): {}", result);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f-\u0438-\u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",children:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"comparisons",label:"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 bool"',children:'fn main() {\n    let a = 5;\n    let b = 10;\n\n    println!("{} == {}: {}", a, b, a == b);    // \u0420\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u043e\n    println!("{} != {}: {}", a, b, a != b);    // \u041d\u0435\u0440\u0430\u0432\u0435\u043d\u0441\u0442\u0432\u043e\n    println!("{} < {}: {}", a, b, a < b);      // \u041c\u0435\u043d\u044c\u0448\u0435\n    println!("{} > {}: {}", a, b, a > b);      // \u0411\u043e\u043b\u044c\u0448\u0435\n    println!("{} <= {}: {}", a, b, a <= b);    // \u041c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e\n    println!("{} >= {}: {}", a, b, a >= b);    // \u0411\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e\n\n    // \u0421\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\n    let s1 = "hello";\n    let s2 = "world";\n    println!("{} == {}: {}", s1, s2, s1 == s2);\n    println!("{} < {} (\u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438): {}", s1, s2, s1 < s2);\n}\n'})})}),(0,t.jsx)(a.A,{value:"conversions",label:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 bool \u0432 \u0447\u0438\u0441\u043b\u0430 \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e"',children:'fn main() {\n    let flag = true;\n\n    // bool -> \u0447\u0438\u0441\u043b\u043e\n    let as_u8 = flag as u8;\n    let as_i32 = flag as i32;\n\n    println!("true \u043a\u0430\u043a u8: {}", as_u8);     // 1\n    println!("true \u043a\u0430\u043a i32: {}", as_i32);   // 1\n\n    let false_flag = false;\n    println!("false \u043a\u0430\u043a u8: {}", false_flag as u8);  // 0\n\n    // \u0427\u0438\u0441\u043b\u043e -> bool (\u0442\u043e\u043b\u044c\u043a\u043e \u044f\u0432\u043d\u043e, \u043d\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438!)\n    let num = 42;\n    let bool_from_num = num != 0;  // \u041b\u044e\u0431\u043e\u0435 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e -> true\n    println!("42 != 0: {}", bool_from_num);\n\n    // \u0421\u0442\u0440\u043e\u043a\u0430 -> bool \u0447\u0435\u0440\u0435\u0437 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\n    let text = "true";\n    let bool_from_string = text == "true";\n    println!("\'{}\' == \'true\': {}", text, bool_from_string);\n\n    // \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445\n    let value = 0;\n    if value != 0 {  // \u0412 Rust \u043d\u0443\u0436\u043d\u043e \u044f\u0432\u043d\u043e\u0435 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\n        println!("\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u043e\u0435");\n    } else {\n        println!("\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0443\u043b\u044e");\n    }\n}\n'})})}),(0,t.jsx)(a.A,{value:"pattern-matching",label:"Pattern matching",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 bool \u0432 pattern matching"',children:'fn main() {\n    let condition = true;\n\n    // \u0421\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441 \u043e\u0431\u0440\u0430\u0437\u0446\u043e\u043c\n    match condition {\n        true => println!("\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0438\u0441\u0442\u0438\u043d\u043d\u043e"),\n        false => println!("\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043b\u043e\u0436\u043d\u043e"),\n    }\n\n    // \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0430\u044f bool\n    fn is_even(n: i32) -> bool {\n        n % 2 == 0\n    }\n\n    let number = 42;\n    match is_even(number) {\n        true => println!("{} - \u0447\u0451\u0442\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e", number),\n        false => println!("{} - \u043d\u0435\u0447\u0451\u0442\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e", number),\n    }\n\n    // \u0411\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0441 \u0431\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438\n    let a = true;\n    let b = false;\n\n    match (a, b) {\n        (true, true) => println!("\u041e\u0431\u0430 true"),\n        (true, false) => println!("\u041f\u0435\u0440\u0432\u044b\u0439 true, \u0432\u0442\u043e\u0440\u043e\u0439 false"),\n        (false, true) => println!("\u041f\u0435\u0440\u0432\u044b\u0439 false, \u0432\u0442\u043e\u0440\u043e\u0439 true"),\n        (false, false) => println!("\u041e\u0431\u0430 false"),\n    }\n}\n'})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u0441\u0438\u043c\u0432\u043e\u043b\u044b-char",children:"\u0421\u0438\u043c\u0432\u043e\u043b\u044b (char)"}),"\n",(0,t.jsxs)(e.p,{children:["\u0422\u0438\u043f ",(0,t.jsx)(e.code,{children:"char"})," \u0432 Rust \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 Unicode-\u0441\u043a\u0430\u043b\u044f\u0440 \u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 4 \u0431\u0430\u0439\u0442\u0430:"]}),"\n",(0,t.jsx)(e.h3,{id:"\u043e\u0441\u043d\u043e\u0432\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",children:"\u041e\u0441\u043d\u043e\u0432\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0421\u0438\u043c\u0432\u043e\u043b\u044b Unicode"',children:"fn main() {\n    let c1 = 'z';                    // \u041b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\n    let c2 = '\u2124';                    // \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\n    let c3 = '\ud83d\ude3b';                   // \u042d\u043c\u043e\u0434\u0437\u0438\n    let c4 = '\u4e2d';                   // \u041a\u0438\u0442\u0430\u0439\u0441\u043a\u0438\u0439 \u0438\u0435\u0440\u043e\u0433\u043b\u0438\u0444\n    let c5 = '\\u{1F980}';           // \u041a\u0440\u0430\u0431 \u0447\u0435\u0440\u0435\u0437 Unicode-\u043a\u043e\u0434\n\n    println!(\"\u0421\u0438\u043c\u0432\u043e\u043b\u044b: {} {} {} {} {}\", c1, c2, c3, c4, c5);\n\n    // \u0420\u0430\u0437\u043c\u0435\u0440 char \u0432\u0441\u0435\u0433\u0434\u0430 4 \u0431\u0430\u0439\u0442\u0430\n    println!(\"\u0420\u0430\u0437\u043c\u0435\u0440 char: {} \u0431\u0430\u0439\u0442\", std::mem::size_of::<char>());\n\n    // \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 Unicode-\u043a\u043e\u0434\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\n    println!(\"\u041a\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 'A': {}\", 'A' as u32);\n    println!(\"\u041a\u043e\u0434 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 '\ud83e\udd80': {}\", '\ud83e\udd80' as u32);\n\n    // \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0438\u0437 \u043a\u043e\u0434\u0430\n    if let Some(symbol) = char::from_u32(65) {\n        println!(\"\u0421\u0438\u043c\u0432\u043e\u043b \u0441 \u043a\u043e\u0434\u043e\u043c 65: {}\", symbol);  // 'A'\n    }\n\n    if let Some(crab) = char::from_u32(129408) {\n        println!(\"\u0421\u0438\u043c\u0432\u043e\u043b \u0441 \u043a\u043e\u0434\u043e\u043c 129408: {}\", crab); // '\ud83e\udd80'\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u043c\u0435\u0442\u043e\u0434\u044b-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438",children:"\u041c\u0435\u0442\u043e\u0434\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(a.A,{value:"classification",label:"\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432"',children:"fn main() {\n    let chars = ['A', 'a', '5', ' ', '\\n', '!', '\u4e2d', '\ud83e\udd80'];\n\n    for ch in chars {\n        println!(\"\\n\u0421\u0438\u043c\u0432\u043e\u043b: '{}'\", ch);\n        println!(\"  \u0411\u0443\u043a\u0432\u0430: {}\", ch.is_alphabetic());\n        println!(\"  \u0426\u0438\u0444\u0440\u0430: {}\", ch.is_numeric());\n        println!(\"  \u0410\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u043e\u0439: {}\", ch.is_alphanumeric());\n        println!(\"  \u041f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0439: {}\", ch.is_whitespace());\n        println!(\"  \u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439: {}\", ch.is_control());\n        println!(\"  \u0412\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440: {}\", ch.is_uppercase());\n        println!(\"  \u041d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440: {}\", ch.is_lowercase());\n        println!(\"  ASCII: {}\", ch.is_ascii());\n    }\n}\n"})})}),(0,t.jsx)(a.A,{value:"case-conversion",label:"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430"',children:"fn main() {\n    let chars = ['A', 'a', '\xd1', '\xf1', '\u0401', '\u0451', '\u4e2d'];\n\n    for ch in chars {\n        println!(\"\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439: '{}'\", ch);\n\n        // \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n        for upper in ch.to_uppercase() {\n            print!(\"  \u0412\u0435\u0440\u0445\u043d\u0438\u0439: '{}'\", upper);\n        }\n        println!();\n\n        // \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\n        for lower in ch.to_lowercase() {\n            print!(\"  \u041d\u0438\u0436\u043d\u0438\u0439: '{}'\", lower);\n        }\n        println!();\n\n        // \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043c\u043e\u0433\u0443\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438\n        // \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0435\u043c\u0435\u0446\u043a\u0438\u0439 \xdf \u0432 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f SS\n    }\n\n    // \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439: \u043d\u0435\u043c\u0435\u0446\u043a\u0438\u0439 \xdf\n    println!(\"\\n\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439:\");\n    let sharp_s = '\xdf';\n    println!(\"\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439: '{}'\", sharp_s);\n    for upper in sharp_s.to_uppercase() {\n        print!(\"\u0412\u0435\u0440\u0445\u043d\u0438\u0439: '{}'\", upper);\n    }\n    println!(); // \u0412\u044b\u0432\u0435\u0434\u0435\u0442: SS\n}\n"})})}),(0,t.jsx)(a.A,{value:"escape-sequences",label:"Escape-\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b"',children:"fn main() {\n    // Escape-\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438\n    let newline = '\\n';           // \u041d\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430\n    let tab = '\\t';              // \u0422\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u044f\n    let carriage_return = '\\r';   // \u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u043a\u0430\u0440\u0435\u0442\u043a\u0438\n    let backslash = '\\\\';         // \u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u043a\u043e\u0441\u0430\u044f \u0447\u0435\u0440\u0442\u0430\n    let single_quote = '\\'';      // \u041e\u0434\u0438\u043d\u0430\u0440\u043d\u0430\u044f \u043a\u0430\u0432\u044b\u0447\u043a\u0430\n    let null = '\\0';             // \u041d\u0443\u043b\u0435\u0432\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\n\n    println!(\"\u041d\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430:{}\", newline);\n    println!(\"\u0422\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u044f:{}\u041f\u043e\u0441\u043b\u0435 \u0442\u0430\u0431\u0443\u043b\u044f\u0446\u0438\u0438\", tab);\n    println!(\"\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u043a\u043e\u0441\u0430\u044f \u0447\u0435\u0440\u0442\u0430: {}\", backslash);\n    println!(\"\u041e\u0434\u0438\u043d\u0430\u0440\u043d\u0430\u044f \u043a\u0430\u0432\u044b\u0447\u043a\u0430: {}\", single_quote);\n    println!(\"\u041d\u0443\u043b\u0435\u0432\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043a\u043e\u0434: {}\", null as u32);\n\n    // Unicode escape-\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438\n    let unicode1 = '\\u{41}';      // 'A' \u0447\u0435\u0440\u0435\u0437 2-\u0437\u043d\u0430\u0447\u043d\u044b\u0439 hex\n    let unicode2 = '\\u{1F980}';   // '\ud83e\udd80' \u0447\u0435\u0440\u0435\u0437 \u043c\u043d\u043e\u0433\u043e\u0437\u043d\u0430\u0447\u043d\u044b\u0439 hex\n\n    println!(\"Unicode A: {}\", unicode1);\n    println!(\"Unicode \u043a\u0440\u0430\u0431: {}\", unicode2);\n\n    // \u0411\u0430\u0439\u0442\u043e\u0432\u044b\u0435 escape-\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e ASCII)\n    let byte_char = '\\x41';       // 'A' \u0447\u0435\u0440\u0435\u0437 \u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u0434\n    println!(\"\u0411\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b: {}\", byte_char);\n}\n"})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f-\u043c\u0435\u0436\u0434\u0443-\u0442\u0438\u043f\u0430\u043c\u0438",children:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0442\u0438\u043f\u0430\u043c\u0438"}),"\n",(0,t.jsx)(e.h3,{id:"\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",children:"\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"',children:'fn main() {\n    // \u0420\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0449\u0438\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f (\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435)\n    let small: i8 = 42;\n    let medium: i16 = small as i16;    // i8 -> i16\n    let large: i32 = medium as i32;    // i16 -> i32\n    let huge: i64 = large as i64;      // i32 -> i64\n\n    println!("i8: {} -> i16: {} -> i32: {} -> i64: {}",\n             small, medium, large, huge);\n\n    // \u0411\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u043a \u0437\u043d\u0430\u043a\u043e\u0432\u044b\u043c \u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430\n    let unsigned: u8 = 255;\n    let signed: i16 = unsigned as i16;  // u8 -> i16 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\n    println!("u8: {} -> i16: {}", unsigned, signed);\n\n    // f32 -> f64 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\n    let float32: f32 = 3.14159;\n    let float64: f64 = float32 as f64;\n    println!("f32: {} -> f64: {}", float32, float64);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",children:"\u041d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"',children:'fn main() {\n    // \u0421\u0443\u0436\u0430\u044e\u0449\u0438\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0442\u0435\u0440\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435\n    let large: i32 = 300;\n    let small: i8 = large as i8;  // \u041f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435!\n    println!("i32: {} -> i8: {}", large, small); // 300 -> 44\n\n    // \u0417\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0432 \u0431\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0435\n    let negative: i32 = -1;\n    let unsigned: u32 = negative as u32;\n    println!("i32: {} -> u32: {}", negative, unsigned); // -1 -> 4294967295\n\n    // \u0427\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u0432 \u0446\u0435\u043b\u044b\u0435\n    let float_val: f64 = 3.99;\n    let int_val: i32 = float_val as i32;  // \u041e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c\n    println!("f64: {} -> i32: {}", float_val, int_val); // 3.99 -> 3\n\n    // \u0421\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    let huge_float: f64 = 1e20;\n    let overflow_int: i32 = huge_float as i32;  // \u041d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435\n    println!("f64: {} -> i32: {}", huge_float, overflow_int);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0435-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f",children:"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u044b\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f"',children:'fn main() {\n    use std::convert::TryInto;\n\n    let large: i32 = 300;\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\n    match large.try_into() {\n        Ok(small_val) => {\n            let small_val: i8 = small_val;\n            println!("\u0423\u0441\u043f\u0435\u0448\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435: {}", small_val);\n        }\n        Err(_) => println!("\u041e\u0448\u0438\u0431\u043a\u0430: {} \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 i8", large),\n    }\n\n    // \u0411\u043e\u043b\u0435\u0435 \u043a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0441 unwrap_or\n    let safe_small: i8 = large.try_into().unwrap_or(0);\n    println!("\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435: {}", safe_small);\n\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0433\u0440\u0430\u043d\u0438\u0446 \u0432\u0440\u0443\u0447\u043d\u0443\u044e\n    if large >= i8::MIN as i32 && large <= i8::MAX as i32 {\n        let small = large as i8;\n        println!("\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435: {}", small);\n    } else {\n        println!("\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 {} \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u044b i8", large);\n    }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435-\u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b-\u0438-\u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b-\u0442\u0438\u043f\u043e\u0432",children:"\u0421\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u043b\u0438\u0442\u0435\u0440\u0430\u043b\u044b \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0442\u0438\u043f\u043e\u0432"}),"\n",(0,t.jsx)(e.h3,{id:"\u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b-\u0442\u0438\u043f\u043e\u0432",children:"\u0421\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0442\u0438\u043f\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432"',children:'fn main() {\n    // \u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0441 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u0430\u043c\u0438\n    let a = 42i32;        // i32\n    let b = 42u64;        // u64\n    let c = 42isize;      // isize\n    let d = 42usize;      // usize\n\n    // \u0427\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439 \u0441 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u0430\u043c\u0438\n    let e = 3.14f32;      // f32\n    let f = 2.71828f64;   // f64\n\n    println!("i32: {}, u64: {}, isize: {}, usize: {}", a, b, c, d);\n    println!("f32: {}, f64: {}", e, f);\n\n    // \u0421\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n    fn process_u64(value: u64) {\n        println!("\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 u64: {}", value);\n    }\n\n    fn process_f32(value: f32) {\n        println!("\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 f32: {}", value);\n    }\n\n    process_u64(123u64);     // \u042f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0438\u043f\n    process_f32(3.14f32);    // \u042f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0438\u043f\n\n    // \u0411\u0435\u0437 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u044c \u0442\u0438\u043f\n    // process_u64(123);     // \u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435\u044f\u0441\u0435\u043d \u0442\u0438\u043f\n    process_u64(123_u64);    // \u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438-\u0432-\u0447\u0438\u0441\u043b\u0430\u0445",children:"\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 \u0432 \u0447\u0438\u0441\u043b\u0430\u0445"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u0438 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0447\u0438\u0441\u0435\u043b"',children:'fn main() {\n    // \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 \u043f\u043e\u0434\u0447\u0451\u0440\u043a\u0438\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u0438\n    let million = 1_000_000;\n    let binary_mask = 0b1111_0000_1010_1010;\n    let hex_color = 0xFF_EC_DE;\n    let float_precise = 1_234.567_890;\n\n    println!("\u041c\u0438\u043b\u043b\u0438\u043e\u043d: {}", million);\n    println!("\u0414\u0432\u043e\u0438\u0447\u043d\u0430\u044f \u043c\u0430\u0441\u043a\u0430: {} ({})", binary_mask, binary_mask);\n    println!("Hex \u0446\u0432\u0435\u0442: {} ({})", hex_color, hex_color);\n    println!("\u0422\u043e\u0447\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: {}", float_precise);\n\n    // \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043b\u044e\u0431\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445\n    let weird_but_valid = 1_2_3_4_5_u32;\n    println!("\u0421\u0442\u0440\u0430\u043d\u043d\u043e\u0435, \u043d\u043e \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0435: {}", weird_but_valid); // 12345\n\n    // \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439\n    let bytes_in_gb = 1_073_741_824;           // \u0413\u0438\u0433\u0430\u0431\u0430\u0439\u0442 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445\n    let nanoseconds = 1_000_000_000;           // \u041d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0435\n    let big_number = 123_456_789_012_345_u64;  // \u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n\n    println!("\u0413\u0411 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445: {}", bytes_in_gb);\n    println!("\u041d\u0430\u043d\u043e\u0441\u0435\u043a\u0443\u043d\u0434 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0435: {}", nanoseconds);\n    println!("\u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e: {}", big_number);\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u043f\u0440\u0438\u043c\u0435\u0440\u044b",children:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b"}),"\n",(0,t.jsx)(e.h3,{id:"\u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440-\u0441-\u0440\u0430\u0437\u043d\u044b\u043c\u0438-\u0442\u0438\u043f\u0430\u043c\u0438",children:"\u041a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440"',children:'fn main() {\n    // \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438\n    fn add_integers(a: i32, b: i32) -> i32 {\n        a + b\n    }\n\n    fn add_floats(a: f64, b: f64) -> f64 {\n        a + b\n    }\n\n    fn is_even(n: i32) -> bool {\n        n % 2 == 0\n    }\n\n    fn first_letter(text: &str) -> Option<char> {\n        text.chars().next()\n    }\n\n    // \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439\n    let int_result = add_integers(42, 58);\n    let float_result = add_floats(3.14159, 2.71828);\n    let even_check = is_even(int_result);\n    let letter = first_letter("Rust");\n\n    println!("\u0421\u0443\u043c\u043c\u0430 \u0446\u0435\u043b\u044b\u0445: {}", int_result);\n    println!("\u0421\u0443\u043c\u043c\u0430 \u0434\u0440\u043e\u0431\u043d\u044b\u0445: {}", float_result);\n    println!("\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0447\u0451\u0442\u043d\u044b\u0439: {}", even_check);\n    if let Some(ch) = letter {\n        println!("\u041f\u0435\u0440\u0432\u0430\u044f \u0431\u0443\u043a\u0432\u0430: {}", ch);\n    }\n\n    // \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n    let precise_calc = (int_result as f64) * float_result;\n    println!("\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435: {}", precise_calc);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440-\u0442\u0435\u043a\u0441\u0442\u0430",children:"\u0410\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0442\u0435\u043a\u0441\u0442\u0430"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0410\u043d\u0430\u043b\u0438\u0437 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435"',children:'fn main() {\n    let text = "Hello, \u4e16\u754c! \ud83e\udd80 Rust 2024";\n\n    let mut letter_count = 0;\n    let mut digit_count = 0;\n    let mut whitespace_count = 0;\n    let mut punctuation_count = 0;\n    let mut emoji_count = 0;\n    let mut other_count = 0;\n\n    println!("\u0410\u043d\u0430\u043b\u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u0430: \'{}\'", text);\n\n    for ch in text.chars() {\n        if ch.is_alphabetic() {\n            letter_count += 1;\n        } else if ch.is_numeric() {\n            digit_count += 1;\n        } else if ch.is_whitespace() {\n            whitespace_count += 1;\n        } else if ch.is_ascii_punctuation() {\n            punctuation_count += 1;\n        } else if (ch as u32) > 127 && !ch.is_alphabetic() && !ch.is_numeric() {\n            // \u041f\u0440\u043e\u0441\u0442\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u044d\u043c\u043e\u0434\u0437\u0438 \u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b\n            emoji_count += 1;\n        } else {\n            other_count += 1;\n        }\n\n        println!("\'{}\': \u043a\u043e\u0434 U+{:04X}, \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f: {}",\n                 ch,\n                 ch as u32,\n                 categorize_char(ch));\n    }\n\n    println!("\\n\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430:");\n    println!("\u0411\u0443\u043a\u0432: {}", letter_count);\n    println!("\u0426\u0438\u0444\u0440: {}", digit_count);\n    println!("\u041f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0445: {}", whitespace_count);\n    println!("\u0417\u043d\u0430\u043a\u043e\u0432 \u043f\u0440\u0435\u043f\u0438\u043d\u0430\u043d\u0438\u044f: {}", punctuation_count);\n    println!("\u042d\u043c\u043e\u0434\u0437\u0438 \u0438 \u0441\u043f\u0435\u0446. \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432: {}", emoji_count);\n    println!("\u041f\u0440\u043e\u0447\u0438\u0445: {}", other_count);\n}\n\nfn categorize_char(ch: char) -> &\'static str {\n    if ch.is_ascii_alphabetic() {\n        "ASCII \u0431\u0443\u043a\u0432\u0430"\n    } else if ch.is_alphabetic() {\n        "Unicode \u0431\u0443\u043a\u0432\u0430"\n    } else if ch.is_ascii_digit() {\n        "ASCII \u0446\u0438\u0444\u0440\u0430"\n    } else if ch.is_numeric() {\n        "Unicode \u0446\u0438\u0444\u0440\u0430"\n    } else if ch.is_whitespace() {\n        "\u041f\u0440\u043e\u0431\u0435\u043b"\n    } else if ch.is_ascii_punctuation() {\n        "\u041f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u044f"\n    } else if ch.is_control() {\n        "\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b"\n    } else {\n        "\u041f\u0440\u043e\u0447\u0435\u0435"\n    }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0440\u0430\u0437\u043c\u0435\u0440\u044b-\u0442\u0438\u043f\u043e\u0432-\u0432-\u043f\u0430\u043c\u044f\u0442\u0438",children:"\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0442\u0438\u043f\u043e\u0432 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432"',children:'fn main() {\n    use std::mem;\n\n    println!("\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0441\u043a\u0430\u043b\u044f\u0440\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445:");\n    println!("i8:    {}", mem::size_of::<i8>());\n    println!("i16:   {}", mem::size_of::<i16>());\n    println!("i32:   {}", mem::size_of::<i32>());\n    println!("i64:   {}", mem::size_of::<i64>());\n    println!("i128:  {}", mem::size_of::<i128>());\n    println!("isize: {}", mem::size_of::<isize>());\n\n    println!("u8:    {}", mem::size_of::<u8>());\n    println!("u16:   {}", mem::size_of::<u16>());\n    println!("u32:   {}", mem::size_of::<u32>());\n    println!("u64:   {}", mem::size_of::<u64>());\n    println!("u128:  {}", mem::size_of::<u128>());\n    println!("usize: {}", mem::size_of::<usize>());\n\n    println!("f32:   {}", mem::size_of::<f32>());\n    println!("f64:   {}", mem::size_of::<f64>());\n\n    println!("bool:  {}", mem::size_of::<bool>());\n    println!("char:  {}", mem::size_of::<char>());\n\n    // \u0412\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 (alignment)\n    println!("\\n\u0412\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432:");\n    println!("i8:    {} \u0431\u0430\u0439\u0442", mem::align_of::<i8>());\n    println!("i16:   {} \u0431\u0430\u0439\u0442", mem::align_of::<i16>());\n    println!("i32:   {} \u0431\u0430\u0439\u0442", mem::align_of::<i32>());\n    println!("i64:   {} \u0431\u0430\u0439\u0442", mem::align_of::<i64>());\n    println!("f64:   {} \u0431\u0430\u0439\u0442", mem::align_of::<f64>());\n    println!("char:  {} \u0431\u0430\u0439\u0442", mem::align_of::<char>());\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u043b\u0443\u0447\u0448\u0438\u0435-\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438-\u0440\u0430\u0431\u043e\u0442\u044b-\u0441-\u0442\u0438\u043f\u0430\u043c\u0438",children:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0442\u0438\u043f\u0430\u043c\u0438"}),"\n",(0,t.jsx)(e.h3,{id:"1-\u0432\u044b\u0431\u043e\u0440-\u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445-\u0442\u0438\u043f\u043e\u0432",children:"1. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0442\u0438\u043f\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u2705 \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u0442\u0438\u043f\u043e\u0432"',children:'fn main() {\n    // \u0414\u043b\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 usize\n    let items = vec![1, 2, 3, 4, 5];\n    for index in 0..items.len() {  // len() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 usize\n        println!("\u042d\u043b\u0435\u043c\u0435\u043d\u0442 {}: {}", index, items[index]);\n    }\n\n    // \u0414\u043b\u044f \u0441\u0447\u0451\u0442\u0447\u0438\u043a\u043e\u0432 \u043e\u0431\u044b\u0447\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e u32\n    let mut counter: u32 = 0;\n    for _ in 0..1000 {\n        counter += 1;\n    }\n\n    // \u0414\u043b\u044f \u0434\u0435\u043d\u0435\u0436\u043d\u044b\u0445 \u0440\u0430\u0441\u0447\u0451\u0442\u043e\u0432 \u0438\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 f64\n    // \u041b\u0443\u0447\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 (\u043a\u043e\u043f\u0435\u0439\u043a\u0438 \u0432\u043c\u0435\u0441\u0442\u043e \u0440\u0443\u0431\u043b\u0435\u0439)\n    let price_in_cents: u64 = 1599;  // 15.99 \u0440\u0443\u0431\u043b\u0435\u0439\n    let quantity: u32 = 3;\n    let total_cents = price_in_cents * (quantity as u64);\n    println!("\u0418\u0442\u043e\u0433\u043e: {:.2} \u0440\u0443\u0431.", total_cents as f64 / 100.0);\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"2-\u044f\u0432\u043d\u043e\u0435-\u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435-\u0442\u0438\u043f\u043e\u0432-\u043a\u043e\u0433\u0434\u0430-\u043d\u0443\u0436\u043d\u043e",children:"2. \u042f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u041a\u043e\u0433\u0434\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u0438\u043f\u044b \u044f\u0432\u043d\u043e"',children:'fn main() {\n    // \u041a\u043e\u0433\u0434\u0430 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0442\u043e\u0440 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0442\u0438\u043f\n    let numbers: Vec<i32> = Vec::new();  // \u041f\u0443\u0441\u0442\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440\n\n    // \u041f\u0440\u0438 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0435 \u0441\u0442\u0440\u043e\u043a\n    let parsed: i32 = "42".parse().expect("\u041d\u0435 \u0447\u0438\u0441\u043b\u043e");\n\n    // \u041f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 generic \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438\n    let result = std::cmp::max(1u8, 2u8);  // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0442\u0438\u043f \u0447\u0435\u0440\u0435\u0437 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\n\n    // \u0412 match \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445 \u0434\u043b\u044f \u044f\u0441\u043d\u043e\u0441\u0442\u0438\n    let value = 42;\n    match value {\n        x if x > 100i32 => println!("\u0411\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e"),\n        _ => println!("\u041e\u0431\u044b\u0447\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e"),\n    }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"3-\u0438\u0437\u0431\u0435\u0433\u0430\u043d\u0438\u0435-\u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439",children:"3. \u0418\u0437\u0431\u0435\u0433\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",metastring:'title="\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0447\u0438\u0441\u043b\u0430\u043c\u0438"',children:'fn main() {\n    // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    let a: u8 = 200;\n    let b: u8 = 100;\n\n    match a.checked_add(b) {\n        Some(sum) => println!("\u0421\u0443\u043c\u043c\u0430: {}", sum),\n        None => println!("\u041f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0441\u043b\u043e\u0436\u0435\u043d\u0438\u0438!"),\n    }\n\n    // \u041d\u0430\u0441\u044b\u0449\u0430\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438\n    let saturated_sum = a.saturating_add(b);\n    println!("\u041d\u0430\u0441\u044b\u0449\u0430\u044e\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430: {}", saturated_sum); // 255 (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c u8)\n\n    // \u041e\u0431\u0451\u0440\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u043a\u043e\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f)\n    let wrapping_sum = a.wrapping_add(b);\n    println!("\u041e\u0431\u0451\u0440\u0442\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430: {}", wrapping_sum); // 44 (300 - 256)\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",children:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"}),"\n",(0,t.jsx)(e.p,{children:"\u0412 \u044d\u0442\u043e\u0439 \u0433\u043b\u0430\u0432\u0435 \u043c\u044b \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u043b\u0438 \u0441\u043a\u0430\u043b\u044f\u0440\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 Rust:"}),"\n",(0,t.jsxs)(e.p,{children:["\u2705 ",(0,t.jsx)(e.strong,{children:"\u0426\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430"})," \u2014 \u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0438 \u0431\u0435\u0437\u0437\u043d\u0430\u043a\u043e\u0432\u044b\u0435, \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u0427\u0438\u0441\u043b\u0430 \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"})," \u2014 f32 \u0438 f64, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u0411\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f"})," \u2014 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u0421\u0438\u043c\u0432\u043e\u043b\u044b"})," \u2014 Unicode-\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 char\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0438\u043f\u043e\u0432"})," \u2014 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u0438 \u043d\u0435\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u044f\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u0420\u0430\u0437\u043c\u0435\u0440\u044b \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435"})," \u2014 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043c\u044f\u0442\u0438\n\u2705 ",(0,t.jsx)(e.strong,{children:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438"})," \u2014 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u0442\u0438\u043f\u043e\u0432 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447"]}),"\n",(0,t.jsx)(e.p,{children:"\u041f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u0430\u0436\u043d\u043e \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u043d\u0430 Rust. \u0421\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u043d\u0430 \u044d\u0442\u0430\u043f\u0435 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438."}),"\n",(0,t.jsx)(e.admonition,{title:"\u0427\u0442\u043e \u0434\u0430\u043b\u044c\u0448\u0435?",type:"info",children:(0,t.jsxs)(e.p,{children:["\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0433\u043b\u0430\u0432\u0435: ",(0,t.jsx)(e.strong,{children:'"\u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0438 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435"'})," \u2014 \u043c\u044b \u0443\u0433\u043b\u0443\u0431\u0438\u043c\u0441\u044f \u0432 \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442, \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438 \u0438\u0445 \u043e\u0442\u043b\u0438\u0447\u0438\u0439 \u043e\u0442 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445."]})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u0437\u0430\u0434\u0430\u043d\u0438\u044f",children:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u0435\u0434\u0438\u043d\u0438\u0446"}),", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0443 \u043c\u0435\u0436\u0434\u0443 \u0426\u0435\u043b\u044c\u0441\u0438\u0435\u043c, \u0424\u0430\u0440\u0435\u043d\u0433\u0435\u0439\u0442\u043e\u043c \u0438 \u041a\u0435\u043b\u044c\u0432\u0438\u043d\u043e\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0442\u0438\u043f\u044b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u043f\u0430\u0440\u043e\u043b\u0435\u0439"}),", \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 (\u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b, \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b) \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0431\u0443\u043b\u0435\u0432\u044b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440"}),", \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0435 \u0430\u0440\u0438\u0444\u043c\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0446\u0432\u0435\u0442\u0430\u043c\u0438"}),", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 u8 \u0434\u043b\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 RGB \u0438 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \u0446\u0432\u0435\u0442\u043e\u0432"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"\u0432\u043e\u043f\u0440\u043e\u0441\u044b-\u0434\u043b\u044f-\u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438",children:"\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0441\u0430\u043c\u043e\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u0412 \u0447\u0451\u043c \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 i32 \u0438 isize?"}),"\n",(0,t.jsx)(e.li,{children:"\u041f\u043e\u0447\u0435\u043c\u0443 char \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 4 \u0431\u0430\u0439\u0442\u0430 \u0432 Rust?"}),"\n",(0,t.jsx)(e.li,{children:"\u041a\u043e\u0433\u0434\u0430 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c f32 \u0432\u043c\u0435\u0441\u0442\u043e f64?"}),"\n",(0,t.jsx)(e.li,{children:"\u041a\u0430\u043a \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c i64 \u0432 i32?"}),"\n",(0,t.jsx)(e.li,{children:"\u0427\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0432 debug \u0438 release \u0440\u0435\u0436\u0438\u043c\u0430\u0445?"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435-\u0441\u0441\u044b\u043b\u043a\u0438",children:"\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://doc.rust-lang.org/book/ch03-02-data-types.html",children:"The Rust Book - Data Types"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://doc.rust-lang.org/reference/types.html",children:"Rust Reference - Types"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://doc.rust-lang.org/rust-by-example/primitives.html",children:"Rust by Example - Primitives"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/IEEE_754",children:"IEEE 754 Standard"})," \u2014 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0447\u0438\u0441\u0435\u043b \u0441 \u043f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0439 \u0442\u043e\u0447\u043a\u043e\u0439"]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},9365:(n,e,l)=>{l.d(e,{A:()=>s});l(6540);var i=l(4164);const t={tabItem:"tabItem_Ymn6"};var r=l(4848);function s({children:n,hidden:e,className:l}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(t.tabItem,l),hidden:e,children:n})}}}]);