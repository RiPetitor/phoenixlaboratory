"use strict";(self.webpackChunkphoenix_lab=self.webpackChunkphoenix_lab||[]).push([[6975],{1214:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438","title":"\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438","description":"\u041c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439","source":"@site/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438.mdx","sourceDirName":"learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438","slug":"/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438","draft":false,"unlisted":false,"editUrl":"https://github.com/RiPetitor/phoenixlaboratory/edit/main/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"learnSidebar","previous":{"title":"\u041a\u043b\u0430\u0441\u0441\u044b \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f (Storage class)","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u041a\u043b\u0430\u0441\u0441\u044b \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043b\u0438 storage class"},"next":{"title":"\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e"}}');var t=i(4848),a=i(8453),l=i(1470),s=i(9365);const o={sidebar_position:8},d="\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438",c={},u=[{value:"\u041c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u043c\u0430\u0441\u0441\u0438\u0432\u044b-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:2},{value:"\u0421\u043f\u043e\u0441\u043e\u0431\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445",id:"\u0441\u043f\u043e\u0441\u043e\u0431\u044b-\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0432-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445",level:2},{value:"\u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0437\u0430\u043f\u0438\u0441\u0438",id:"\u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u044b\u0435-\u0444\u043e\u0440\u043c\u044b-\u0437\u0430\u043f\u0438\u0441\u0438",level:3},{value:"\u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",id:"\u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",level:2},{value:"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",id:"\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445-\u0447\u0435\u0440\u0435\u0437-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",level:3},{value:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445",id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0432-\u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445",level:2},{value:"\u041f\u043e\u0438\u0441\u043a \u0438 \u0430\u043d\u0430\u043b\u0438\u0437",id:"\u043f\u043e\u0438\u0441\u043a-\u0438-\u0430\u043d\u0430\u043b\u0438\u0437",level:3},{value:"\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",id:"\u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0447\u0435\u0440\u0435\u0437-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",level:2},{value:"\u041f\u0440\u044f\u043c\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432",id:"\u043f\u0440\u044f\u043c\u043e\u0435-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432",level:3},{value:"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438",id:"\u0440\u0430\u0431\u043e\u0442\u0430-\u0441\u043e-\u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438",level:2},{value:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u0442\u0440\u043e\u043a",id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0441\u0442\u0440\u043e\u043a",level:3},{value:"\u041c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",id:"\u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435-\u043c\u0430\u0441\u0441\u0438\u0432\u044b-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",level:2},{value:"\u0414\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b",id:"\u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0435-\u043c\u0430\u0441\u0441\u0438\u0432\u044b",level:3},{value:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",level:2},{value:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430",id:"\u0432\u043e\u0437\u0432\u0440\u0430\u0442-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043d\u0430-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b-\u043c\u0430\u0441\u0441\u0438\u0432\u0430",level:3},{value:"\u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",id:"\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u0435-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",level:2},{value:"\u0417\u0430\u0449\u0438\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439",id:"\u0437\u0430\u0449\u0438\u0442\u0430-\u0434\u0430\u043d\u043d\u044b\u0445-\u043e\u0442-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439",level:3},{value:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f",id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f",level:2},{value:"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432",id:"\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432",level:3}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438-\u0438-\u043c\u0430\u0441\u0441\u0438\u0432\u044b-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",children:"\u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0438"})}),"\n","\n",(0,t.jsx)(e.h2,{id:"\u043c\u0430\u0441\u0441\u0438\u0432\u044b-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u041c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,t.jsx)(e.p,{children:"\u041f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0435\u0433\u043e \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0430 \u043d\u0435 \u043a\u043e\u043f\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"void processArray(int arr[], int size) {\n    // arr \u2014 \u044d\u0442\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u0441\u043f\u043e\u0441\u043e\u0431\u044b-\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0432-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445",children:"\u0421\u043f\u043e\u0441\u043e\u0431\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445"}),"\n",(0,t.jsx)(e.h3,{id:"\u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u044b\u0435-\u0444\u043e\u0440\u043c\u044b-\u0437\u0430\u043f\u0438\u0441\u0438",children:"\u042d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0437\u0430\u043f\u0438\u0441\u0438"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(s.A,{value:"forms",label:"\u0420\u0430\u0437\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0437\u0430\u043f\u0438\u0441\u0438",default:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0412\u0441\u0435 \u044d\u0442\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u044b:\nvoid method1(int arr[], int size) {\n    printf("\u0424\u043e\u0440\u043c\u0430 1: arr[] - %d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\\n", size);\n}\n\nvoid method2(int arr[10], int size) {  // \u0420\u0430\u0437\u043c\u0435\u0440 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f!\n    printf("\u0424\u043e\u0440\u043c\u0430 2: arr[10] - %d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\\n", size);\n}\n\nvoid method3(int *arr, int size) {\n    printf("\u0424\u043e\u0440\u043c\u0430 3: *arr - %d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\\n", size);\n}\n\nint main() {\n    int data[5] = {1, 2, 3, 4, 5};\n\n    method1(data, 5);\n    method2(data, 5);  // \u0420\u0430\u0437\u043c\u0435\u0440 10 \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438 \u043d\u0435 \u0432\u0430\u0436\u0435\u043d\n    method3(data, 5);\n\n    return 0;\n}\n'})})}),(0,t.jsx)(s.A,{value:"size-importance",label:"\u0412\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u0430",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid printArray(int *arr, int size) {\n    printf("\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430: ");\n    for (int i = 0; i < size; i++) {\n        printf("%d ", arr[i]);\n    }\n    printf("\\n");\n}\n\n// \u274c \u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u0435\u043d\nvoid badPrintArray(int arr[]) {\n    // \u041a\u0430\u043a \u0443\u0437\u043d\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430? sizeof(arr) \u0432\u0435\u0440\u043d\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f!\n    printf("\u0420\u0430\u0437\u043c\u0435\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 arr: %zu \u0431\u0430\u0439\u0442\\n", sizeof(arr));  // 8 \u0431\u0430\u0439\u0442 (\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c)\n}\n\nint main() {\n    int numbers[6] = {10, 20, 30, 40, 50, 60};\n\n    printf("\u0420\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0432 main: %zu \u0431\u0430\u0439\u0442\\n", sizeof(numbers));  // 24 \u0431\u0430\u0439\u0442\u0430\n\n    printArray(numbers, 6);  // \u2705 \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u2014 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0440\u0430\u0437\u043c\u0435\u0440\n    badPrintArray(numbers);   // \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\n\n    return 0;\n}\n'})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",children:"\u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432"}),"\n",(0,t.jsx)(e.h3,{id:"\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445-\u0447\u0435\u0440\u0435\u0437-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",children:"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid swapValues(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nvoid updateBalance(float *balance, float amount, char operation) {\n    printf("\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0431\u0430\u043b\u0430\u043d\u0441: %.2f\\n", *balance);\n\n    if (operation == \'+\') {\n        *balance += amount;\n        printf("\u041f\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 %.2f\\n", amount);\n    } else if (operation == \'-\') {\n        if (*balance >= amount) {\n            *balance -= amount;\n            printf("\u0421\u043f\u0438\u0441\u0430\u043d\u0438\u0435 %.2f\\n", amount);\n        } else {\n            printf("\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0440\u0435\u0434\u0441\u0442\u0432\\n");\n        }\n    }\n\n    printf("\u041d\u043e\u0432\u044b\u0439 \u0431\u0430\u043b\u0430\u043d\u0441: %.2f\\n", *balance);\n}\n\nint main() {\n    int x = 10, y = 20;\n    printf("\u0414\u043e \u043e\u0431\u043c\u0435\u043d\u0430: x = %d, y = %d\\n", x, y);\n\n    swapValues(&x, &y);  // \u041f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n\n    printf("\u041f\u043e\u0441\u043b\u0435 \u043e\u0431\u043c\u0435\u043d\u0430: x = %d, y = %d\\n", x, y);\n\n    float account = 500.0;\n    printf("\\n=== \u0411\u0410\u041d\u041a\u041e\u0412\u0421\u041a\u0418\u0415 \u041e\u041f\u0415\u0420\u0410\u0426\u0418\u0418 ===\\n");\n    updateBalance(&account, 150.0, \'+\');\n    updateBalance(&account, 200.0, \'-\');\n    updateBalance(&account, 1000.0, \'-\');\n\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0432-\u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445",children:"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u0445"}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u043e\u0438\u0441\u043a-\u0438-\u0430\u043d\u0430\u043b\u0438\u0437",children:"\u041f\u043e\u0438\u0441\u043a \u0438 \u0430\u043d\u0430\u043b\u0438\u0437"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(s.A,{value:"search",label:"\u041f\u043e\u0438\u0441\u043a \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435",default:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nint findElement(int arr[], int size, int target) {\n    for (int i = 0; i < size; i++) {\n        if (arr[i] == target) {\n            return i;  // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\n        }\n    }\n    return -1;  // \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\n}\n\nint* findElementPtr(int arr[], int size, int target) {\n    for (int i = 0; i < size; i++) {\n        if (arr[i] == target) {\n            return &arr[i];  // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n        }\n    }\n    return NULL;  // \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\n}\n\nint main() {\n    int data[8] = {15, 42, 8, 73, 29, 56, 91, 34};\n    int searchValue = 73;\n\n    // \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443\n    int index = findElement(data, 8, searchValue);\n    if (index >= 0) {\n        printf("\u042d\u043b\u0435\u043c\u0435\u043d\u0442 %d \u043d\u0430\u0439\u0434\u0435\u043d \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 %d\\n", searchValue, index);\n    }\n\n    // \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044e\n    int *foundPtr = findElementPtr(data, 8, searchValue);\n    if (foundPtr != NULL) {\n        printf("\u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442: %d\\n", *foundPtr);\n        *foundPtr = 999;  // \u041c\u043e\u0436\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n        printf("\u0418\u0437\u043c\u0435\u043d\u0438\u043b\u0438 \u043d\u0430: %d\\n", data[index]);\n    }\n\n    return 0;\n}\n'})})}),(0,t.jsx)(s.A,{value:"statistics",label:"\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0430\u043d\u0430\u043b\u0438\u0437",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid analyzeArray(int arr[], int size, int *min, int *max, float *avg, int *sum) {\n    *min = arr[0];\n    *max = arr[0];\n    *sum = 0;\n\n    for (int i = 0; i < size; i++) {\n        if (arr[i] < *min) *min = arr[i];\n        if (arr[i] > *max) *max = arr[i];\n        *sum += arr[i];\n    }\n\n    *avg = (float)(*sum) / size;\n}\n\nint main() {\n    int scores[10] = {85, 92, 78, 95, 88, 76, 94, 82, 90, 87};\n    int minimum, maximum, total;\n    float average;\n\n    analyzeArray(scores, 10, &minimum, &maximum, &average, &total);\n\n    printf("=== \u0410\u041d\u0410\u041b\u0418\u0417 \u041e\u0426\u0415\u041d\u041e\u041a ===\\n");\n    printf("\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432: 10\\n");\n    printf("\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430: %d\\n", minimum);\n    printf("\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430: %d\\n", maximum);\n    printf("\u0421\u0443\u043c\u043c\u0430 \u0431\u0430\u043b\u043b\u043e\u0432: %d\\n", total);\n    printf("\u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0431\u0430\u043b\u043b: %.1f\\n", average);\n\n    return 0;\n}\n'})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432-\u0447\u0435\u0440\u0435\u0437-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",children:"\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"}),"\n",(0,t.jsx)(e.h3,{id:"\u043f\u0440\u044f\u043c\u043e\u0435-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432",children:"\u041f\u0440\u044f\u043c\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid fillArray(int arr[], int size, int value) {\n    for (int i = 0; i < size; i++) {\n        arr[i] = value;\n    }\n}\n\nvoid multiplyArray(int arr[], int size, int multiplier) {\n    for (int i = 0; i < size; i++) {\n        arr[i] *= multiplier;\n    }\n}\n\nvoid reverseArray(int arr[], int size) {\n    for (int i = 0; i < size / 2; i++) {\n        int temp = arr[i];\n        arr[i] = arr[size - 1 - i];\n        arr[size - 1 - i] = temp;\n    }\n}\n\nint main() {\n    int numbers[6];\n\n    // \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\n    fillArray(numbers, 6, 5);\n    printf("\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f: ");\n    for (int i = 0; i < 6; i++) printf("%d ", numbers[i]);\n    printf("\\n");\n\n    // \u0423\u043c\u043d\u043e\u0436\u0430\u0435\u043c \u043d\u0430 3\n    multiplyArray(numbers, 6, 3);\n    printf("\u041f\u043e\u0441\u043b\u0435 \u0443\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 3: ");\n    for (int i = 0; i < 6; i++) printf("%d ", numbers[i]);\n    printf("\\n");\n\n    // \u041f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c\n    reverseArray(numbers, 6);\n    printf("\u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u043e\u0442\u0430: ");\n    for (int i = 0; i < 6; i++) printf("%d ", numbers[i]);\n    printf("\\n");\n\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0440\u0430\u0431\u043e\u0442\u0430-\u0441\u043e-\u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438",children:"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438"}),"\n",(0,t.jsx)(e.h3,{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0441\u0442\u0440\u043e\u043a",children:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u0442\u0440\u043e\u043a"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(s.A,{value:"string-length",label:"\u0414\u043b\u0438\u043d\u0430 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437 \u0441\u0442\u0440\u043e\u043a",default:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"#include <stdio.h>\n\nint stringLength(char *str) {\n    int length = 0;\n    while (str[length] != '\\0') {\n        length++;\n    }\n    return length;\n}\n\nvoid analyzeString(char str[], int *length, int *vowels, int *consonants) {\n    *length = 0;\n    *vowels = 0;\n    *consonants = 0;\n\n    while (str[*length] != '\\0') {\n        char ch = str[*length];\n\n        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')) {\n            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||\n                ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U') {\n                (*vowels)++;\n            } else {\n                (*consonants)++;\n            }\n        }\n\n        (*length)++;\n    }\n}\n\nint main() {\n    char text[] = \"Programming in C language\";\n    int len, vowelCount, consonantCount;\n\n    analyzeString(text, &len, &vowelCount, &consonantCount);\n\n    printf(\"\u0422\u0435\u043a\u0441\u0442: \\\"%s\\\"\\n\", text);\n    printf(\"\u0414\u043b\u0438\u043d\u0430: %d \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432\\n\", len);\n    printf(\"\u0413\u043b\u0430\u0441\u043d\u044b\u0445: %d\\n\", vowelCount);\n    printf(\"\u0421\u043e\u0433\u043b\u0430\u0441\u043d\u044b\u0445: %d\\n\", consonantCount);\n\n    return 0;\n}\n"})})}),(0,t.jsx)(s.A,{value:"string-modify",label:"\u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"#include <stdio.h>\n\nvoid toLowerCase(char *str) {\n    while (*str != '\\0') {\n        if (*str >= 'A' && *str <= 'Z') {\n            *str = *str - 'A' + 'a';  // \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432 \u0441\u0442\u0440\u043e\u0447\u043d\u0443\u044e\n        }\n        str++;\n    }\n}\n\nvoid removeChar(char *str, char target) {\n    char *src = str;   // \u041e\u0442\u043a\u0443\u0434\u0430 \u0447\u0438\u0442\u0430\u0435\u043c\n    char *dst = str;   // \u041a\u0443\u0434\u0430 \u043f\u0438\u0448\u0435\u043c\n\n    while (*src != '\\0') {\n        if (*src != target) {\n            *dst = *src;\n            dst++;\n        }\n        src++;\n    }\n    *dst = '\\0';  // \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443\n}\n\nint main() {\n    char message[] = \"Hello World!\";\n\n    printf(\"\u0418\u0441\u0445\u043e\u0434\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430: \\\"%s\\\"\\n\", message);\n\n    toLowerCase(message);\n    printf(\"\u0412 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435: \\\"%s\\\"\\n\", message);\n\n    removeChar(message, 'l');\n    printf(\"\u0411\u0435\u0437 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 'l': \\\"%s\\\"\\n\", message);\n\n    return 0;\n}\n"})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435-\u043c\u0430\u0441\u0441\u0438\u0432\u044b-\u043a\u0430\u043a-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",children:"\u041c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b"}),"\n",(0,t.jsx)(e.h3,{id:"\u0434\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0435-\u043c\u0430\u0441\u0441\u0438\u0432\u044b",children:"\u0414\u0432\u0443\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid printMatrix(int matrix[][4], int rows) {  // \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e!\n    printf("\u041c\u0430\u0442\u0440\u0438\u0446\u0430 %d\xd74:\\n", rows);\n\n    for (int i = 0; i < rows; i++) {\n        for (int j = 0; j < 4; j++) {\n            printf("%3d ", matrix[i][j]);\n        }\n        printf("\\n");\n    }\n}\n\nint calculateMatrixSum(int matrix[][4], int rows) {\n    int sum = 0;\n\n    for (int i = 0; i < rows; i++) {\n        for (int j = 0; j < 4; j++) {\n            sum += matrix[i][j];\n        }\n    }\n\n    return sum;\n}\n\nvoid fillMatrix(int matrix[][4], int rows, int value) {\n    for (int i = 0; i < rows; i++) {\n        for (int j = 0; j < 4; j++) {\n            matrix[i][j] = value + i + j;\n        }\n    }\n}\n\nint main() {\n    int data[3][4];\n\n    fillMatrix(data, 3, 10);\n    printMatrix(data, 3);\n\n    int sum = calculateMatrixSum(data, 3);\n    printf("\u0421\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432: %d\\n", sum);\n\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438",children:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438"}),"\n",(0,t.jsx)(e.h3,{id:"\u0432\u043e\u0437\u0432\u0440\u0430\u0442-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043d\u0430-\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b-\u043c\u0430\u0441\u0441\u0438\u0432\u0430",children:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(s.A,{value:"return-pointer",label:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442",default:!0,children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nint* findMax(int arr[], int size) {\n    if (size <= 0) return NULL;\n\n    int *maxPtr = &arr[0];  // \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\n    for (int i = 1; i < size; i++) {\n        if (arr[i] > *maxPtr) {\n            maxPtr = &arr[i];  // \u0417\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u043d\u043e\u0432\u043e\u0433\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c\u0430\n        }\n    }\n\n    return maxPtr;\n}\n\nint* findMin(int arr[], int size) {\n    if (size <= 0) return NULL;\n\n    int *minPtr = arr;  // \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\n    for (int i = 1; i < size; i++) {\n        if (*(arr + i) < *minPtr) {\n            minPtr = arr + i;  // \u0410\u0434\u0440\u0435\u0441 \u043d\u043e\u0432\u043e\u0433\u043e \u043c\u0438\u043d\u0438\u043c\u0443\u043c\u0430\n        }\n    }\n\n    return minPtr;\n}\n\nint main() {\n    int values[8] = {45, 12, 78, 34, 89, 23, 67, 56};\n\n    int *maxElement = findMax(values, 8);\n    int *minElement = findMin(values, 8);\n\n    if (maxElement != NULL) {\n        printf("\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442: %d\\n", *maxElement);\n        printf("\u0415\u0433\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f: %ld\\n", maxElement - values);\n\n        *maxElement = 999;  // \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u043c \u0447\u0435\u0440\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c\n        printf("\u0418\u0437\u043c\u0435\u043d\u0438\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043d\u0430: %d\\n", *maxElement);\n    }\n\n    if (minElement != NULL) {\n        printf("\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442: %d\\n", *minElement);\n        printf("\u0415\u0433\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f: %ld\\n", minElement - values);\n    }\n\n    return 0;\n}\n'})})}),(0,t.jsx)(s.A,{value:"string-return",label:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nchar* findWordInText(char *text, char *word) {\n    char *textPtr = text;\n\n    while (*textPtr != \'\\0\') {\n        char *t = textPtr;\n        char *w = word;\n\n        // \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u044b\n        while (*t != \'\\0\' && *w != \'\\0\' && *t == *w) {\n            t++;\n            w++;\n        }\n\n        if (*w == \'\\0\') {  // \u0421\u043b\u043e\u0432\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e\n            return textPtr;\n        }\n\n        textPtr++;\n    }\n\n    return NULL;  // \u0421\u043b\u043e\u0432\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\n}\n\nchar* getFileExtension(char *filename) {\n    char *lastDot = NULL;\n    char *ptr = filename;\n\n    while (*ptr != \'\\0\') {\n        if (*ptr == \'.\') {\n            lastDot = ptr + 1;  // \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0447\u043a\u0438\n        }\n        ptr++;\n    }\n\n    return lastDot;\n}\n\nint main() {\n    char document[] = "\u0418\u0437\u0443\u0447\u0430\u0435\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 \u0421\u0438";\n    char searchWord[] = "\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435";\n\n    char *found = findWordInText(document, searchWord);\n\n    if (found != NULL) {\n        printf("\u0421\u043b\u043e\u0432\u043e \u043d\u0430\u0439\u0434\u0435\u043d\u043e: \\"%s\\"\\n", found);\n        printf("\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0432 \u0442\u0435\u043a\u0441\u0442\u0435: %ld\\n", found - document);\n    }\n\n    char filename[] = "document.txt";\n    char *extension = getFileExtension(filename);\n\n    if (extension != NULL) {\n        printf("\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430: %s\\n", extension);\n    }\n\n    return 0;\n}\n'})})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u0435-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b",children:"\u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b"}),"\n",(0,t.jsx)(e.h3,{id:"\u0437\u0430\u0449\u0438\u0442\u0430-\u0434\u0430\u043d\u043d\u044b\u0445-\u043e\u0442-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439",children:"\u0417\u0430\u0449\u0438\u0442\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\nvoid printArrayReadOnly(const int arr[], int size) {\n    printf("\u041c\u0430\u0441\u0441\u0438\u0432 (\u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u0435\u043d\u0438\u0435): ");\n    for (int i = 0; i < size; i++) {\n        printf("%d ", arr[i]);\n        // arr[i] = 0;  // \u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438! \u041a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\n    }\n    printf("\\n");\n}\n\nint calculateSum(const int *arr, int size) {\n    int sum = 0;\n    for (int i = 0; i < size; i++) {\n        sum += arr[i];  // \u041c\u043e\u0436\u0435\u043c \u0447\u0438\u0442\u0430\u0442\u044c\n        // arr[i] *= 2;  // \u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u043b\u044c\u0437\u044f \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\n    }\n    return sum;\n}\n\nvoid processString(const char *input, char *output) {\n    int i = 0;\n    while (input[i] != \'\\0\') {\n        output[i] = input[i];  // \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0438\u0437 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438\n        i++;\n    }\n    output[i] = \'\\0\';\n\n    // input[0] = \'X\';  // \u041e\u0448\u0438\u0431\u043a\u0430! input \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u0430 \u043e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439\n}\n\nint main() {\n    int data[5] = {10, 20, 30, 40, 50};\n    char source[] = "\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442";\n    char destination[50];\n\n    printArrayReadOnly(data, 5);  // \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\n\n    int sum = calculateSum(data, 5);\n    printf("\u0421\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432: %d\\n", sum);\n\n    processString(source, destination);\n    printf("\u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430: \\"%s\\"\\n", destination);\n\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435-\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f",children:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f"}),"\n",(0,t.jsx)(e.h3,{id:"\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432",children:"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\nvoid bubbleSort(int arr[], int size) {\n    for (int i = 0; i < size - 1; i++) {\n        for (int j = 0; j < size - 1 - i; j++) {\n            if (arr[j] > arr[j + 1]) {\n                // \u041e\u0431\u043c\u0435\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n\n// \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\nint filterArray(int source[], int sourceSize, int target[], int minValue) {\n    int targetIndex = 0;\n\n    for (int i = 0; i < sourceSize; i++) {\n        if (source[i] >= minValue) {\n            target[targetIndex] = source[i];\n            targetIndex++;\n        }\n    }\n\n    return targetIndex;  // \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n}\n\n// \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\nvoid mergeArrays(int arr1[], int size1, int arr2[], int size2, int result[]) {\n    int i = 0;\n\n    // \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\n    for (int j = 0; j < size1; j++) {\n        result[i++] = arr1[j];\n    }\n\n    // \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0432\u0442\u043e\u0440\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\n    for (int j = 0; j < size2; j++) {\n        result[i++] = arr2[j];\n    }\n}\n\nint main() {\n    int original[8] = {64, 34, 25, 12, 22, 11, 90, 5};\n    int filtered[8];\n    int sorted[8];\n    int combined[16];\n    int additional[4] = {100, 200, 300, 400};\n\n    printf("\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432: ");\n    for (int i = 0; i < 8; i++) printf("%d ", original[i]);\n    printf("\\n");\n\n    // \u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b >= 20\n    int filteredCount = filterArray(original, 8, filtered, 20);\n    printf("\u041e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043e (%d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432): ", filteredCount);\n    for (int i = 0; i < filteredCount; i++) printf("%d ", filtered[i]);\n    printf("\\n");\n\n    // \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0434\u043b\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438\n    for (int i = 0; i < 8; i++) sorted[i] = original[i];\n\n    bubbleSort(sorted, 8);\n    printf("\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439: ");\n    for (int i = 0; i < 8; i++) printf("%d ", sorted[i]);\n    printf("\\n");\n\n    // \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u044b\n    mergeArrays(original, 8, additional, 4, combined);\n    printf("\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0439: ");\n    for (int i = 0; i < 12; i++) printf("%d ", combined[i]);\n    printf("\\n");\n\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(e.admonition,{title:"\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b",type:"info",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u041c\u0430\u0441\u0441\u0438\u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435"})," \u2014 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0412\u0441\u0435\u0433\u0434\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0440"})," \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 const"})," \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438"})," \u043d\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432"]}),"\n"]})}),"\n",(0,t.jsx)(e.admonition,{title:"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438",type:"tip",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c (NULL, \u0440\u0430\u0437\u043c\u0435\u0440 > 0)"}),"\n",(0,t.jsx)(e.li,{children:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432"}),"\n",(0,t.jsx)(e.li,{children:"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430"}),"\n",(0,t.jsx)(e.li,{children:"\u0417\u0430\u0449\u0438\u0449\u0430\u0439\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0435\u0437 const \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438"}),"\n"]})}),"\n",(0,t.jsx)(e.admonition,{title:"\u0427\u0430\u0441\u0442\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438",type:"warning",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u0417\u0430\u0431\u044b\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430"}),"\n",(0,t.jsx)(e.li,{children:"\u041f\u044b\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0447\u0435\u0440\u0435\u0437 sizeof() \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"}),"\n",(0,t.jsx)(e.li,{children:"\u0418\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u043a\u043e\u0433\u0434\u0430 \u043d\u0443\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u044c"}),"\n",(0,t.jsx)(e.li,{children:"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435"}),"\n"]})}),"\n",(0,t.jsx)(e.p,{children:"\u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u2014 \u043e\u0441\u043d\u043e\u0432\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439."})]})}function f(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},1470:(n,e,i)=>{i.d(e,{A:()=>z});var r=i(6540),t=i(4164),a=i(3104),l=i(6347),s=i(205),o=i(7485),d=i(1682),c=i(679);function u(n){return r.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,r.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(n){const{values:e,children:i}=n;return(0,r.useMemo)((()=>{const n=e??function(n){return u(n).map((({props:{value:n,label:e,attributes:i,default:r}})=>({value:n,label:e,attributes:i,default:r})))}(i);return function(n){const e=(0,d.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,i])}function f({value:n,tabValues:e}){return e.some((e=>e.value===n))}function m({queryString:n=!1,groupId:e}){const i=(0,l.W6)(),t=function({queryString:n=!1,groupId:e}){if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:n,groupId:e});return[(0,o.aZ)(t),(0,r.useCallback)((n=>{if(!t)return;const e=new URLSearchParams(i.location.search);e.set(t,n),i.replace({...i.location,search:e.toString()})}),[t,i])]}function p(n){const{defaultValue:e,queryString:i=!1,groupId:t}=n,a=h(n),[l,o]=(0,r.useState)((()=>function({defaultValue:n,tabValues:e}){if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${e.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=e.find((n=>n.default))??e[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:e,tabValues:a}))),[d,u]=m({queryString:i,groupId:t}),[p,x]=function({groupId:n}){const e=function(n){return n?`docusaurus.tab.${n}`:null}(n),[i,t]=(0,c.Dv)(e);return[i,(0,r.useCallback)((n=>{e&&t.set(n)}),[e,t])]}({groupId:t}),v=(()=>{const n=d??p;return f({value:n,tabValues:a})?n:null})();(0,s.A)((()=>{v&&o(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((n=>{if(!f({value:n,tabValues:a}))throw new Error(`Can't select invalid tab value=${n}`);o(n),u(n),x(n)}),[u,x,a]),tabValues:a}}var x=i(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(4848);function g({className:n,block:e,selectedValue:i,selectValue:r,tabValues:l}){const s=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),d=n=>{const e=n.currentTarget,t=s.indexOf(e),a=l[t].value;a!==i&&(o(e),r(a))},c=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const i=s.indexOf(n.currentTarget)+1;e=s[i]??s[0];break}case"ArrowLeft":{const i=s.indexOf(n.currentTarget)-1;e=s[i]??s[s.length-1];break}}e?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":e},n),children:l.map((({value:n,label:e,attributes:r})=>(0,j.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:n=>{s.push(n)},onKeyDown:c,onClick:d,...r,className:(0,t.A)("tabs__item",v.tabItem,r?.className,{"tabs__item--active":i===n}),children:e??n},n)))})}function b({lazy:n,children:e,selectedValue:i}){const a=(Array.isArray(e)?e:[e]).filter(Boolean);if(n){const n=a.find((n=>n.props.value===i));return n?(0,r.cloneElement)(n,{className:(0,t.A)("margin-top--md",n.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==i})))})}function y(n){const e=p(n);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",v.tabList),children:[(0,j.jsx)(g,{...e,...n}),(0,j.jsx)(b,{...e,...n})]})}function z(n){const e=(0,x.A)();return(0,j.jsx)(y,{...n,children:u(n.children)},String(e))}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>s});var r=i(6540);const t={},a=r.createContext(t);function l(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),r.createElement(a.Provider,{value:e},n.children)}},9365:(n,e,i)=>{i.d(e,{A:()=>l});i(6540);var r=i(4164);const t={tabItem:"tabItem_Ymn6"};var a=i(4848);function l({children:n,hidden:e,className:i}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,i),hidden:e,children:n})}}}]);