"use strict";(self.webpackChunkphoenix_lab=self.webpackChunkphoenix_lab||[]).push([[8728],{1470:(n,e,t)=>{t.d(e,{A:()=>T});var r=t(6540),i=t(4164),a=t(3104),l=t(6347),s=t(205),o=t(7485),d=t(1682),u=t(679);function c(n){return r.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,r.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(n){const{values:e,children:t}=n;return(0,r.useMemo)((()=>{const n=e??function(n){return c(n).map((({props:{value:n,label:e,attributes:t,default:r}})=>({value:n,label:e,attributes:t,default:r})))}(t);return function(n){const e=(0,d.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function h({value:n,tabValues:e}){return e.some((e=>e.value===n))}function f({queryString:n=!1,groupId:e}){const t=(0,l.W6)(),i=function({queryString:n=!1,groupId:e}){if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:n,groupId:e});return[(0,o.aZ)(i),(0,r.useCallback)((n=>{if(!i)return;const e=new URLSearchParams(t.location.search);e.set(i,n),t.replace({...t.location,search:e.toString()})}),[i,t])]}function m(n){const{defaultValue:e,queryString:t=!1,groupId:i}=n,a=p(n),[l,o]=(0,r.useState)((()=>function({defaultValue:n,tabValues:e}){if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${e.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=e.find((n=>n.default))??e[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:e,tabValues:a}))),[d,c]=f({queryString:t,groupId:i}),[m,v]=function({groupId:n}){const e=function(n){return n?`docusaurus.tab.${n}`:null}(n),[t,i]=(0,u.Dv)(e);return[t,(0,r.useCallback)((n=>{e&&i.set(n)}),[e,i])]}({groupId:i}),g=(()=>{const n=d??m;return h({value:n,tabValues:a})?n:null})();(0,s.A)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((n=>{if(!h({value:n,tabValues:a}))throw new Error(`Can't select invalid tab value=${n}`);o(n),c(n),v(n)}),[c,v,a]),tabValues:a}}var v=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function b({className:n,block:e,selectedValue:t,selectValue:r,tabValues:l}){const s=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),d=n=>{const e=n.currentTarget,i=s.indexOf(e),a=l[i].value;a!==t&&(o(e),r(a))},u=n=>{let e=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const t=s.indexOf(n.currentTarget)+1;e=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(n.currentTarget)-1;e=s[t]??s[s.length-1];break}}e?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":e},n),children:l.map((({value:n,label:e,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:n=>{s.push(n)},onKeyDown:u,onClick:d,...r,className:(0,i.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===n}),children:e??n},n)))})}function j({lazy:n,children:e,selectedValue:t}){const a=(Array.isArray(e)?e:[e]).filter(Boolean);if(n){const n=a.find((n=>n.props.value===t));return n?(0,r.cloneElement)(n,{className:(0,i.A)("margin-top--md",n.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==t})))})}function y(n){const e=m(n);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,x.jsx)(b,{...e,...n}),(0,x.jsx)(j,{...e,...n})]})}function T(n){const e=(0,v.A)();return(0,x.jsx)(y,{...n,children:c(n.children)},String(e))}},4436:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","title":"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","description":"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","source":"@site/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.mdx","sourceDirName":"learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438","slug":"/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","draft":false,"unlisted":false,"editUrl":"https://github.com/RiPetitor/phoenixlaboratory/edit/main/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.mdx","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"learnSidebar","previous":{"title":"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"},"next":{"title":"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432","permalink":"/docs/learn/\u0421/\u041e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0421/\u0413\u043b\u0430\u0432\u0430 4. \u0424\u0443\u043d\u043a\u0446\u0438\u0438/\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432"}}');var i=t(4848),a=t(8453),l=t(1470),s=t(9365);const o={sidebar_position:12},d="\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",u={},c=[{value:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438",id:"\u0432\u043e\u0437\u0432\u0440\u0430\u0442-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043d\u0430-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",level:2},{value:"\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441-\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:2},{value:"\u041e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u044e",id:"\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439-\u0444\u0443\u043d\u043a\u0446\u0438\u044e",level:3},{value:"\u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u0444\u0430\u0431\u0440\u0438\u043a\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:2},{value:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0439-\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0435-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",level:3},{value:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432",id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432",level:2},{value:"\u0412\u044b\u0431\u043e\u0440 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f",id:"\u0432\u044b\u0431\u043e\u0440-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430-\u0432\u043e-\u0432\u0440\u0435\u043c\u044f-\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f",level:3},{value:"\u0423\u0441\u043b\u043e\u0432\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u0443\u0441\u043b\u043e\u0432\u043d\u043e\u0435-\u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:2},{value:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0442\u043e\u0440\u044b",id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0442\u043e\u0440\u044b",level:3},{value:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b",id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b",level:2},{value:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:3},{value:"\u0426\u0435\u043f\u043e\u0447\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0439",id:"\u0446\u0435\u043f\u043e\u0447\u043a\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",level:2},{value:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438",id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438",level:3},{value:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435",id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435-\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435",level:2},{value:"\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439",id:"\u0441\u0438\u0441\u0442\u0435\u043c\u0430-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0441\u043e\u0431\u044b\u0442\u0438\u0439",level:3}];function p(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u044f-\u043a\u0430\u043a-\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442-\u0434\u0440\u0443\u0433\u043e\u0439-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",children:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043a\u0430\u043a \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"})}),"\n","\n",(0,i.jsx)(e.h2,{id:"\u0432\u043e\u0437\u0432\u0440\u0430\u0442-\u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439-\u043d\u0430-\u0444\u0443\u043d\u043a\u0446\u0438\u0438",children:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"}),"\n",(0,i.jsx)(e.p,{children:"\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0438\u043b\u0438 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"int (*getOperation(char symbol))(int, int) {\n    // \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u043d\u0443\u0436\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n    switch (symbol) {\n        case '+': return addFunction;\n        case '*': return multiplyFunction;\n        default: return NULL;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441-\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,i.jsx)(e.h3,{id:"\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439-\u0444\u0443\u043d\u043a\u0446\u0438\u044e",children:"\u041e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u044e"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(s.A,{value:"syntax",label:"\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441",default:!0,children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'// \u041e\u0431\u0449\u0438\u0439 \u0432\u0438\u0434:\n// \u0442\u0438\u043f_\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 (*\u0438\u043c\u044f_\u0444\u0443\u043d\u043a\u0446\u0438\u0438(\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b))(\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b_\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0439_\u0444\u0443\u043d\u043a\u0446\u0438\u0438)\n\n#include <stdio.h>\n\n// \u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430\nint add(int a, int b) { return a + b; }\nint subtract(int a, int b) { return a - b; }\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e\nint (*selectMathOperation(int choice))(int, int) {\n    switch (choice) {\n        case 1: return add;\n        case 2: return subtract;\n        default: return NULL;\n    }\n}\n\nint main() {\n    int choice = 1;\n\n    // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e\n    int (*operation)(int, int) = selectMathOperation(choice);\n\n    if (operation != NULL) {\n        int result = operation(10, 3);\n        printf("\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: %d\\n", result);\n    }\n\n    return 0;\n}\n'})})}),(0,i.jsx)(s.A,{value:"typedef",label:"\u0423\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 typedef",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"#include <stdio.h>\n\n// \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0442\u0438\u043f \u0444\u0443\u043d\u043a\u0446\u0438\u0438\ntypedef int (*MathOperation)(int, int);\n\nint multiply(int a, int b) { return a * b; }\nint divide(int a, int b) { return b != 0 ? a / b : 0; }\n\n// \u0422\u0435\u043f\u0435\u0440\u044c \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u043f\u0440\u043e\u0449\u0435\nMathOperation getMathFunction(char op) {\n    switch (op) {\n        case '*': return multiply;\n        case '/': return divide;\n        default: return NULL;\n    }\n}\n\nint main() {\n    char operation = '*';\n\n    MathOperation func = getMathFunction(operation);\n\n    if (func != NULL) {\n        printf(\"12 %c 4 = %d\\n\", operation, func(12, 4));\n    }\n\n    return 0;\n}\n"})})})]}),"\n",(0,i.jsx)(e.h2,{id:"\u0444\u0430\u0431\u0440\u0438\u043a\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,i.jsx)(e.h3,{id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0439-\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0435-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432",children:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\nvoid processAsIntegers(int arr[], int size) {\n    printf("\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u0430\u043a \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430:\\n");\n    for (int i = 0; i < size; i++) {\n        printf("%d ", arr[i]);\n    }\n    printf("\\n");\n}\n\nvoid processAsCharacters(int arr[], int size) {\n    printf("\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u0430\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u044b:\\n");\n    for (int i = 0; i < size; i++) {\n        if (arr[i] >= 32 && arr[i] <= 126) {\n            printf("\'%c\' ", (char)arr[i]);\n        } else {\n            printf("? ");\n        }\n    }\n    printf("\\n");\n}\n\nvoid processAsSum(int arr[], int size) {\n    int sum = 0;\n    for (int i = 0; i < size; i++) {\n        sum += arr[i];\n    }\n    printf("\u0421\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432: %d\\n", sum);\n}\n\n// \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445\nvoid (*getDataProcessor(char *mode))(int[], int) {\n    if (mode[0] == \'n\') return processAsIntegers;    // "numbers"\n    if (mode[0] == \'c\') return processAsCharacters;  // "chars"\n    if (mode[0] == \'s\') return processAsSum;         // "sum"\n    return NULL;\n}\n\nint main() {\n    int data[5] = {65, 66, 67, 68, 69};  // ASCII \u043a\u043e\u0434\u044b A, B, C, D, E\n\n    char *modes[3] = {"numbers", "chars", "sum"};\n\n    printf("\u041e\u0434\u0438\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u2014 \u0440\u0430\u0437\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438:\\n");\n    for (int i = 0; i < 5; i++) printf("%d ", data[i]);\n    printf("\\n\\n");\n\n    for (int i = 0; i < 3; i++) {\n        void (*processor)(int[], int) = getDataProcessor(modes[i]);\n\n        if (processor != NULL) {\n            printf("\u0420\u0435\u0436\u0438\u043c \'%s\':\\n", modes[i]);\n            processor(data, 5);\n            printf("\\n");\n        }\n    }\n\n    return 0;\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432",children:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432"}),"\n",(0,i.jsx)(e.h3,{id:"\u0432\u044b\u0431\u043e\u0440-\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430-\u0432\u043e-\u0432\u0440\u0435\u043c\u044f-\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f",children:"\u0412\u044b\u0431\u043e\u0440 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(s.A,{value:"sorting-strategy",label:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438",default:!0,children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438\nvoid bubbleSort(int arr[], int size) {\n    printf("\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u0443\u0437\u044b\u0440\u044c\u043a\u043e\u043c\\n");\n    for (int i = 0; i < size - 1; i++) {\n        for (int j = 0; j < size - 1 - i; j++) {\n            if (arr[j] > arr[j + 1]) {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n\nvoid insertionSort(int arr[], int size) {\n    printf("\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u0432\u0441\u0442\u0430\u0432\u043a\u0430\u043c\u0438\\n");\n    for (int i = 1; i < size; i++) {\n        int key = arr[i];\n        int j = i - 1;\n\n        while (j >= 0 && arr[j] > key) {\n            arr[j + 1] = arr[j];\n            j--;\n        }\n        arr[j + 1] = key;\n    }\n}\n\n// \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438\nvoid (*getSortingAlgorithm(int dataSize))(int[], int) {\n    if (dataSize <= 10) {\n        return insertionSort;  // \u0414\u043b\u044f \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\n    } else {\n        return bubbleSort;     // \u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\n    }\n}\n\nint main() {\n    int smallArray[5] = {64, 34, 25, 12, 22};\n    int largeArray[12] = {64, 34, 25, 12, 22, 11, 90, 88, 76, 50, 42, 13};\n\n    printf("=== \u0410\u0412\u0422\u041e\u041c\u0410\u0422\u0418\u0427\u0415\u0421\u041a\u0418\u0419 \u0412\u042b\u0411\u041e\u0420 \u0410\u041b\u0413\u041e\u0420\u0418\u0422\u041c\u0410 ===\\n");\n\n    // \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0434\u043b\u044f \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    void (*smallSorter)(int[], int) = getSortingAlgorithm(5);\n    printf("\u041c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 (5 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432):\\n");\n    smallSorter(smallArray, 5);\n    for (int i = 0; i < 5; i++) printf("%d ", smallArray[i]);\n    printf("\\n\\n");\n\n    // \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    void (*largeSorter)(int[], int) = getSortingAlgorithm(12);\n    printf("\u0411\u043e\u043b\u044c\u0448\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 (12 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432):\\n");\n    largeSorter(largeArray, 12);\n    for (int i = 0; i < 12; i++) printf("%d ", largeArray[i]);\n    printf("\\n");\n\n    return 0;\n}\n'})})}),(0,i.jsx)(s.A,{value:"search-strategy",label:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u043f\u043e\u0438\u0441\u043a\u0430\nint linearSearch(int arr[], int size, int target) {\n    printf("\u041b\u0438\u043d\u0435\u0439\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 %d\\n", target);\n    for (int i = 0; i < size; i++) {\n        if (arr[i] == target) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nint binarySearch(int arr[], int size, int target) {\n    printf("\u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 %d (\u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d)\\n", target);\n    int left = 0, right = size - 1;\n\n    while (left <= right) {\n        int mid = (left + right) / 2;\n        if (arr[mid] == target) {\n            return mid;\n        } else if (arr[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n\n// \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u043e\u0438\u0441\u043a\u0430\nint (*getSearchAlgorithm(int isSorted))(int[], int, int) {\n    if (isSorted) {\n        return binarySearch;   // \u0414\u043b\u044f \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\n    } else {\n        return linearSearch;   // \u0414\u043b\u044f \u043d\u0435\u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432\n    }\n}\n\nint main() {\n    int unsorted[6] = {64, 34, 25, 89, 12, 22};\n    int sorted[6] = {12, 22, 25, 34, 64, 89};\n    int target = 25;\n\n    // \u041f\u043e\u0438\u0441\u043a \u0432 \u043d\u0435\u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n    int (*searchUnsorted)(int[], int, int) = getSearchAlgorithm(0);\n    int pos1 = searchUnsorted(unsorted, 6, target);\n    printf("\u041d\u0430\u0439\u0434\u0435\u043d \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438: %d\\n\\n", pos1);\n\n    // \u041f\u043e\u0438\u0441\u043a \u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n    int (*searchSorted)(int[], int, int) = getSearchAlgorithm(1);\n    int pos2 = searchSorted(sorted, 6, target);\n    printf("\u041d\u0430\u0439\u0434\u0435\u043d \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438: %d\\n", pos2);\n\n    return 0;\n}\n'})})})]}),"\n",(0,i.jsx)(e.h2,{id:"\u0443\u0441\u043b\u043e\u0432\u043d\u043e\u0435-\u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u0423\u0441\u043b\u043e\u0432\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,i.jsx)(e.h3,{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0442\u043e\u0440\u044b",children:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0442\u043e\u0440\u044b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430\nvoid formatAsDecimal(int value) {\n    printf("%d", value);\n}\n\nvoid formatAsHex(int value) {\n    printf("0x%X", value);\n}\n\nvoid formatAsBinary(int value) {\n    printf("0b");\n    for (int i = 7; i >= 0; i--) {\n        printf("%d", (value >> i) & 1);\n    }\n}\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0442\u0435\u0440\u0430\nvoid (*getFormatter(char *format))(int) {\n    if (format[0] == \'d\') return formatAsDecimal;  // "decimal"\n    if (format[0] == \'h\') return formatAsHex;      // "hex"\n    if (format[0] == \'b\') return formatAsBinary;   // "binary"\n    return formatAsDecimal;  // \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n}\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0441 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c\u044b\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c\nvoid displayNumbers(int arr[], int size, char *format) {\n    void (*formatter)(int) = getFormatter(format);\n\n    printf("\u0424\u043e\u0440\u043c\u0430\u0442 \'%s\': ", format);\n    for (int i = 0; i < size; i++) {\n        formatter(arr[i]);\n        if (i < size - 1) printf(", ");\n    }\n    printf("\\n");\n}\n\nint main() {\n    int numbers[4] = {15, 255, 42, 128};\n\n    printf("\u0427\u0438\u0441\u043b\u0430 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445:\\n");\n\n    displayNumbers(numbers, 4, "decimal");\n    displayNumbers(numbers, 4, "hex");\n    displayNumbers(numbers, 4, "binary");\n\n    return 0;\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b",children:"\u0424\u0443\u043d\u043a\u0446\u0438\u0438-\u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b"}),"\n",(0,i.jsx)(e.h3,{id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(s.A,{value:"generators",label:"\u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0444\u0443\u043d\u043a\u0446\u0438\u0439",default:!0,children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0422\u0438\u043f \u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u0430\ntypedef int (*Predicate)(int);\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u0438-\u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b\nint isGreaterThan10(int x) { return x > 10; }\nint isGreaterThan50(int x) { return x > 50; }\nint isGreaterThan100(int x) { return x > 100; }\n\n// \u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u043e\u0432 (\u043a\u043e\u043d\u0446\u0435\u043f\u0442\u0443\u0430\u043b\u044c\u043d\u043e)\nPredicate createGreaterThanPredicate(int threshold) {\n    // \u0412 \u044f\u0437\u044b\u043a\u0435 \u0421\u0438 \u043d\u0435\u043b\u044c\u0437\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438,\n    // \u043d\u043e \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0438\u0437 \u0433\u043e\u0442\u043e\u0432\u044b\u0445\n    switch (threshold) {\n        case 10: return isGreaterThan10;\n        case 50: return isGreaterThan50;\n        case 100: return isGreaterThan100;\n        default: return NULL;\n    }\n}\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0441 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u043e\u043c\nint filterWithThreshold(int arr[], int size, int threshold, int result[]) {\n    Predicate predicate = createGreaterThanPredicate(threshold);\n\n    if (predicate == NULL) {\n        printf("\u041d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u043f\u043e\u0440\u043e\u0433: %d\\n", threshold);\n        return 0;\n    }\n\n    int count = 0;\n    printf("\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b > %d:\\n", threshold);\n\n    for (int i = 0; i < size; i++) {\n        if (predicate(arr[i])) {\n            result[count] = arr[i];\n            printf("\u041f\u0440\u0438\u043d\u044f\u0442: %d\\n", arr[i]);\n            count++;\n        }\n    }\n\n    return count;\n}\n\nint main() {\n    int data[8] = {5, 25, 75, 125, 15, 45, 85, 105};\n    int filtered[8];\n\n    printf("\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432: ");\n    for (int i = 0; i < 8; i++) printf("%d ", data[i]);\n    printf("\\n\\n");\n\n    int thresholds[3] = {10, 50, 100};\n\n    for (int i = 0; i < 3; i++) {\n        int count = filterWithThreshold(data, 8, thresholds[i], filtered);\n\n        printf("\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 (\u043f\u043e\u0440\u043e\u0433 %d): ", thresholds[i]);\n        for (int j = 0; j < count; j++) printf("%d ", filtered[j]);\n        printf("\\n\\n");\n    }\n\n    return 0;\n}\n'})})}),(0,i.jsx)(s.A,{value:"validators",label:"\u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u043e\u0432",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0422\u0438\u043f\u044b \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u043e\u0432\ntypedef int (*Validator)(int);\n\n// \u0413\u043e\u0442\u043e\u0432\u044b\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u044b\nint validateAge(int age) { return age >= 0 && age <= 120; }\nint validateGrade(int grade) { return grade >= 0 && grade <= 100; }\nint validateTemperature(int temp) { return temp >= -50 && temp <= 50; }\n\n// \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u043e\u0432\nValidator getValidator(char *dataType) {\n    if (dataType[0] == \'a\') return validateAge;         // "age"\n    if (dataType[0] == \'g\') return validateGrade;       // "grade"\n    if (dataType[0] == \'t\') return validateTemperature; // "temperature"\n    return NULL;\n}\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445\nvoid validateInput(int value, char *dataType) {\n    Validator validator = getValidator(dataType);\n\n    if (validator != NULL) {\n        if (validator(value)) {\n            printf("\u2705 %s %d \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0435\u043d\\n", dataType, value);\n        } else {\n            printf("\u274c %s %d \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0435\u043d\\n", dataType, value);\n        }\n    } else {\n        printf("\u2753 \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445: %s\\n", dataType);\n    }\n}\n\nint main() {\n    printf("\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438:\\n");\n\n    validateInput(25, "age");           // \u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\n    validateInput(150, "age");          // \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\n    validateInput(85, "grade");         // \u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430\n    validateInput(105, "grade");        // \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430\n    validateInput(22, "temperature");   // \u041a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430\n    validateInput(60, "temperature");   // \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430\u044f \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430\n\n    return 0;\n}\n'})})})]}),"\n",(0,i.jsx)(e.h2,{id:"\u0446\u0435\u043f\u043e\u0447\u043a\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0439",children:"\u0426\u0435\u043f\u043e\u0447\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}),"\n",(0,i.jsx)(e.h3,{id:"\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435-\u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438",children:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\nint addFive(int x) { return x + 5; }\nint multiplyByThree(int x) { return x * 3; }\nint subtractTwo(int x) { return x - 2; }\n\n// \u0422\u0438\u043f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438\ntypedef int (*Processor)(int);\n\n// \u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432\nProcessor* createPipeline(char *pipelineType, int *stageCount) {\n    static Processor simpleFlow[2] = {addFive, multiplyByThree};\n    static Processor complexFlow[3] = {addFive, multiplyByThree, subtractTwo};\n\n    if (pipelineType[0] == \'s\') {  // "simple"\n        *stageCount = 2;\n        return simpleFlow;\n    } else if (pipelineType[0] == \'c\') {  // "complex"\n        *stageCount = 3;\n        return complexFlow;\n    }\n\n    *stageCount = 0;\n    return NULL;\n}\n\n// \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u0430\nint executePipeline(int input, char *pipelineType) {\n    int stageCount;\n    Processor *pipeline = createPipeline(pipelineType, &stageCount);\n\n    if (pipeline == NULL) {\n        printf("\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u0430: %s\\n", pipelineType);\n        return input;\n    }\n\n    int result = input;\n    printf("\u041f\u0430\u0439\u043f\u043b\u0430\u0439\u043d \'%s\' \u0434\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f %d:\\n", pipelineType, input);\n\n    for (int i = 0; i < stageCount; i++) {\n        int oldResult = result;\n        result = pipeline[i](result);\n        printf("\u042d\u0442\u0430\u043f %d: %d \u2192 %d\\n", i + 1, oldResult, result);\n    }\n\n    return result;\n}\n\nint main() {\n    int testValue = 10;\n\n    printf("\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d\u043e\u0432:\\n");\n\n    int simpleResult = executePipeline(testValue, "simple");\n    printf("\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d: %d \u2192 %d\\n\\n", testValue, simpleResult);\n\n    int complexResult = executePipeline(testValue, "complex");\n    printf("\u0421\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u0430\u0439\u043f\u043b\u0430\u0439\u043d: %d \u2192 %d\\n", testValue, complexResult);\n\n    return 0;\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435-\u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435",children:"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435"}),"\n",(0,i.jsx)(e.h3,{id:"\u0441\u0438\u0441\u0442\u0435\u043c\u0430-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0441\u043e\u0431\u044b\u0442\u0438\u0439",children:"\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n\n// \u0422\u0438\u043f\u044b \u0441\u043e\u0431\u044b\u0442\u0438\u0439\ntypedef enum {\n    EVENT_CLICK,\n    EVENT_HOVER,\n    EVENT_KEYPRESS\n} EventType;\n\n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439\nvoid handleButtonClick() { printf("\ud83d\uddb1\ufe0f \u041a\u043d\u043e\u043f\u043a\u0430 \u043d\u0430\u0436\u0430\u0442\u0430\\n"); }\nvoid handleLinkClick() { printf("\ud83d\udd17 \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430\u0436\u0430\u0442\u0430\\n"); }\nvoid handleMenuClick() { printf("\ud83d\udccb \u041c\u0435\u043d\u044e \u043e\u0442\u043a\u0440\u044b\u0442\u043e\\n"); }\n\nvoid handleButtonHover() { printf("\ud83d\udc46 \u041d\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443\\n"); }\nvoid handleLinkHover() { printf("\ud83d\udc46 \u041d\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0443\\n"); }\n\nvoid handleKeyA() { printf("\u2328\ufe0f \u041d\u0430\u0436\u0430\u0442\u0430 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 A\\n"); }\nvoid handleKeyEnter() { printf("\u2328\ufe0f \u041d\u0430\u0436\u0430\u0442\u0430 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 Enter\\n"); }\n\n// \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0441\u043e\u0431\u044b\u0442\u0438\u0439\nvoid (*getEventHandler(EventType eventType, int elementId))(void) {\n    switch (eventType) {\n        case EVENT_CLICK:\n            switch (elementId) {\n                case 1: return handleButtonClick;\n                case 2: return handleLinkClick;\n                case 3: return handleMenuClick;\n                default: return NULL;\n            }\n        case EVENT_HOVER:\n            switch (elementId) {\n                case 1: return handleButtonHover;\n                case 2: return handleLinkHover;\n                default: return NULL;\n            }\n        case EVENT_KEYPRESS:\n            switch (elementId) {\n                case 65: return handleKeyA;      // ASCII \u043a\u043e\u0434 \'A\'\n                case 13: return handleKeyEnter; // ASCII \u043a\u043e\u0434 Enter\n                default: return NULL;\n            }\n        default:\n            return NULL;\n    }\n}\n\n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f\nvoid processEvent(EventType eventType, int elementId) {\n    void (*handler)(void) = getEventHandler(eventType, elementId);\n\n    if (handler != NULL) {\n        handler();  // \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\n    } else {\n        printf("\u2753 \u041d\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u044f\\n");\n    }\n}\n\nint main() {\n    printf("\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439:\\n");\n\n    processEvent(EVENT_CLICK, 1);    // \u041a\u043b\u0438\u043a \u043f\u043e \u043a\u043d\u043e\u043f\u043a\u0435\n    processEvent(EVENT_HOVER, 2);    // \u041d\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0443\n    processEvent(EVENT_KEYPRESS, 65); // \u041d\u0430\u0436\u0430\u0442\u0438\u0435 \u043a\u043b\u0430\u0432\u0438\u0448\u0438 A\n    processEvent(EVENT_CLICK, 99);   // \u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\n    return 0;\n}\n'})}),"\n",(0,i.jsx)(e.admonition,{title:"\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b",type:"info",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0432\u044b\u0431\u043e\u0440"})," \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0418\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u044f\u0446\u0438\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432"})," \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0430\u0442\u0442\u0435\u0440\u043d"})," \u2014 \u0432\u044b\u0431\u043e\u0440 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0424\u0430\u0431\u0440\u0438\u0447\u043d\u044b\u0439 \u043f\u0430\u0442\u0442\u0435\u0440\u043d"})," \u2014 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c"]}),"\n"]})}),"\n",(0,i.jsx)(e.admonition,{title:"\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430",type:"tip",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0413\u0438\u0431\u043a\u043e\u0441\u0442\u044c"})," \u2014 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0420\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u043e\u0441\u0442\u044c"})," \u2014 \u043b\u0435\u0433\u043a\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u041f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"})," \u2014 \u043e\u0434\u0438\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0439"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c"})," \u2014 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438"]}),"\n"]})}),"\n",(0,i.jsx)(e.admonition,{title:"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f",type:"warning",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0412 \u044f\u0437\u044b\u043a\u0435 \u0421\u0438 \u043d\u0435\u043b\u044c\u0437\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438"})," \u2014 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0438\u0437 \u0433\u043e\u0442\u043e\u0432\u044b\u0445"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438"})," \u043d\u0430 NULL"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435"})," \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"]}),"\n"]})}),"\n",(0,i.jsx)(e.p,{children:"\u0412\u043e\u0437\u0432\u0440\u0430\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u0437 \u0434\u0440\u0443\u0433\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0430\u0434\u0430\u043f\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0441 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c\u044b\u043c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c."})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>s});var r=t(6540);const i={},a=r.createContext(i);function l(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(a.Provider,{value:e},n.children)}},9365:(n,e,t)=>{t.d(e,{A:()=>l});t(6540);var r=t(4164);const i={tabItem:"tabItem_Ymn6"};var a=t(4848);function l({children:n,hidden:e,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,t),hidden:e,children:n})}}}]);